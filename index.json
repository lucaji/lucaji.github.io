[{"categories":["Music Projects"],"content":"Set on a moonlit stretch of a western Africa coastline, Goats, Tea and Trouble draws inspiration from a surreal folk tale I wrote about a nomadic shepherd, his mischievous goats, and the mysteries of a coastal community caught between tradition and change. The song captures the strange rhythm of nights where firelight, stolen cloth, and desert legends collide—narrated through a dreamlike soundscape of Maghrebi rebab, low choral harmonies, and ethnic percussive jams","date":"2025-05-30","objectID":"/goats-tea-and-trouble/","tags":["release","ethnic","apple-music","spotify","bass-guitar","fretless"],"title":"🎵 Goats, Tea and Trouble — New Song Out Now 🌙","uri":"/goats-tea-and-trouble/"},{"categories":["Music Projects"],"content":"Some stories arrive long before the music does. Goats, Tea and Trouble began as a slow-burning tale told under starlight—a dreamlike fable set on Africa’s western coast, where ancient spells, unruly goats, and firelit music blur the line between myth and memory. This song is the echo of that story: a soundscape born from a nomad’s bonfire, a missing cloth, and the quiet resistance of people who still live by rhythms older than time. Before you listen, read the story that inspired it. The story The events of this tale unfold across a single night—from sunset to sunrise—on a warm, mid-June evening along an undisclosed stretch of Africa’s western coastline. Though the story was initially imagined between Safi and Essaouira, its landscape and rhythms more closely resemble rural coastal Mauritania. This ambiguity is intentional. The story does not anchor itself to a specific time or place, instead evoking an atmosphere both ancient and ongoing. The community in which it takes place is humble and enduring. Locals live in wooden shacks and improvised huts, nestled along the beachside, living off the sea and the sparse gifts of the land. Their routines are defined by simplicity and a deep, shared respect for the pace of nature. There is no electricity. Evenings are lit by fire, and companionship thrives under starlight. Our protagonist is a solitary shepherd, a nomad by tradition and temperament. He travels with his herd of goats, walking long distances along the coast, gathering not only grazing grounds for his animals but also small treasures—fossils, mineral fragments, bones polished by salt and time. These finds, once gathered, are sold in the nearest souk markets, helping him to sustain his modest needs. On this particular day, the shepherd is slowly making his way along the shoreline, watching the seagulls circle in anticipation of the fishermen’s return. A few of his goats trail behind, nosing through sand and seaweed. Among the rocks, he spots a beautifully preserve","date":"2025-05-30","objectID":"/goats-tea-and-trouble/:0:0","tags":["release","ethnic","apple-music","spotify","bass-guitar","fretless"],"title":"🎵 Goats, Tea and Trouble — New Song Out Now 🌙","uri":"/goats-tea-and-trouble/"},{"categories":["Events and Exhibits"],"content":"A live performance of theatre, music and dance along a photographic exhibit where sixteen photographers showcased their themed visual short-stories through their images, lead by the professional photographer Pino Giannini. Each tale begun with a narration by Alessandra Arcieri, with her voice setting the rightful mood, moments before a musical comment by Yours Truly started to engulf the theatre hall, with compelling beats and expressive textures paying hommage to the visual identity. The blindfolded dancer Bruna Cerasa coreographed with her harmonic movements and sudden twitches, thrills and body postures, the physical rendition of the stories. The event has been organized by Fotografia Pino Giannini and it was held in the spacious venue of SPAZIO MATTA in Pescara on the 25th January 2025. Fotografia, Teatro, Musica, Danza… una commistione magica di arte, passione e amicizia. Grazie infinite a tutti i fotografi narratori, che attraverso le loro storie ci hanno donato uno spicchio della propria intimità. Un pensiero speciale a tre cari amici che ci sono sempre: Alessandra Arcieri, Bruna Cerasa e Luca Cipressi. Le fotografie, ordinate e montate in un video, saranno proiettate sul grande schermo accompagnate dai paesaggi sonori di Luca Cipressi, dalla voce di Alessandra Arcieri che interpreterà i testi proposti dagli autori e da Bruna Cerasa, che danzerà liberamente lasciandosi trasportare da musica, parole e immagini. Fotografie e testi di: Ludovico Belli - Emanuele Cerreto - Domenico Ciccotelli Manolo Creati - Francesca D’Amato - Anna D’Arcangelo Danilo Di Gianvittorio - Giselda Di Iorio Alessandra D’Urbano - Lorella Dubini - Anna Paola Fasoli Chantal Gouby - Tania Salvatore - Agnese Sansonetti Marcello Tacconelli - Paolo Tamburro - Sandro Veglianti Flyer - La Magia e la Storia dei Luoghi siamo Noi ","date":"2025-01-25","objectID":"/fotografia-storia-siamo-noi-live/:0:0","tags":["experimental","roli","live"],"title":"La Magia e la Storia dei Luoghi siamo Noi","uri":"/fotografia-storia-siamo-noi-live/"},{"categories":["Events and Exhibits"],"content":"Special Thanks to: Fotografia Pino Giannini Alessandra Arcieri Bruna Cerasa ","date":"2025-01-25","objectID":"/fotografia-storia-siamo-noi-live/:1:0","tags":["experimental","roli","live"],"title":"La Magia e la Storia dei Luoghi siamo Noi","uri":"/fotografia-storia-siamo-noi-live/"},{"categories":["Events and Exhibits"],"content":"Photogallery Group photo - La Magia e la Storia dei Luoghi siamo Noi ","date":"2025-01-25","objectID":"/fotografia-storia-siamo-noi-live/:2:0","tags":["experimental","roli","live"],"title":"La Magia e la Storia dei Luoghi siamo Noi","uri":"/fotografia-storia-siamo-noi-live/"},{"categories":["Music Projects"],"content":"Of Breath and Bark: A Morning Interlude in the Park","date":"2024-06-30","objectID":"/didjeing-outta-dog-relaxing-australian-didgeridoo-yoga-beats/","tags":["didgeridoo","yoga","roli","loopy-pro"],"title":"🎵 Didjeing outta dog","uri":"/didjeing-outta-dog-relaxing-australian-didgeridoo-yoga-beats/"},{"categories":["Music Projects"],"content":"It was one of those summer mornings when time feels almost paused — a tranquil pocket of stillness nestled within the city’s otherwise relentless pulse. The grass was already warm with sun, and the air carried the scent of cut leaves and waking soil. Beneath the shade of a tall plane tree, a small group had gathered on mats, in silent reverence to breath and body. At the center stood a yoga teacher, her posture fluid, calm, unhurried — an embodiment of presence. Just beside her, I found my place — not to stretch or pose, but to add sound to space. I held in my hands a Didgeribone — a slide didgeridoo, its roots ancient, its voice both grounded and alive. Unlike the traditional form, this version allowed me to slide through tonal ranges, deepening the dialogue between vibration and movement. Its voice emerged slowly — a long, low drone, textured and primal, rising like a hum from the earth itself. Layered into this was a soft weave of ancestral percussion — pulsing textures like wind rustling dry leaves, or heartbeats echoing in distant memory. Each breath into the didgeribone extended time, held space. The notes weren’t trying to go anywhere — they simply were. Present, like the practitioners stretching toward the sky in quiet determination. For those few measures, sound and body were aligned — breath in rhythm, motion in stillness, mind in rest. It felt as if the entire park was swaying gently to this unspoken pact of peace. Then, without warning, a large stray dog burst into our serene world. Tongue lolling, coat tousled, voice booming with the unmistakable bark of intrusion. He was not angry — just loud, insistent, as if the silence had gone on long enough and the park needed reminding of its daily duties. In a moment, the spell broke. A woman startled, a mat rustled, a bird took flight. The world returned to its usual entropy. But something lingered — a tone in the chest, a memory of breath stretched long and slow, a shared silence briefly held. Sometimes, it ta","date":"2024-06-30","objectID":"/didjeing-outta-dog-relaxing-australian-didgeridoo-yoga-beats/:0:0","tags":["didgeridoo","yoga","roli","loopy-pro"],"title":"🎵 Didjeing outta dog","uri":"/didjeing-outta-dog-relaxing-australian-didgeridoo-yoga-beats/"},{"categories":["Research and Education"],"content":"A comparison of two different bass-guitar active electronics.","date":"2023-05-30","objectID":"/cort-bass-active-electronics/","tags":["bass guitar","active preamp","measurements","analog-electronics","fretless"],"title":"Bass Guitar preamps comparison: Bartolini MK-1 vs. MarkBass MB-1","uri":"/cort-bass-active-electronics/"},{"categories":["Research and Education"],"content":" Artisan B4 with Markbass MB-1 preamp Element B5 with Bartolini MK-1 preamp This article explores and compares two preamps commonly found in mid-tier factory bass guitars: the Bartolini MK-1 and the Markbass MB-1. These two systems—despite being similarly specced in terms of controls and layout—differ substantially in design philosophy, implementation, and performance. The goal is to provide insight into their internal architecture and practical implications for musicians and tinkerers. ","date":"2023-05-30","objectID":"/cort-bass-active-electronics/:0:0","tags":["bass guitar","active preamp","measurements","analog-electronics","fretless"],"title":"Bass Guitar preamps comparison: Bartolini MK-1 vs. MarkBass MB-1","uri":"/cort-bass-active-electronics/"},{"categories":["Research and Education"],"content":"Instrument Specifications SPECIFICATIONS B5 Element B4FL+AS Construction Bolt-on Bolt-on Body Mahogany (Ash top) Swamp Ash Neck 5pcs Walnut \u0026 Panga Panga Maple/Wenge, 1F 20.5mm, 12F 22mm Fretboard Roasted Maple Panga Panga Fretboard Radius 15.75\" (400mm) n.a. Frets 24 Fretless, 2 octaves Scale 34\" (864mm) 34\" (864mm) Tuners Hipshot® Ultralite Hipshot® Ultralite Bridge MetalCraft M5 - 18mm EB12(4) Pickups Bartolini® MK-1 set Bartolini® MK1-4/F \u0026 MK1-4/R Electronics Bartolini MK-1 Markbass MB-1 Hardware Color Black Black Strings D’Addario® EXL170-SSL D’Addario® EXL165 (105–045) Shared Features: Master volume potentiometer Pickup balancer (bridge/neck) Three-band EQ (active mode) Passive/active switch 9V battery power supply Tip Note: On the Bartolini MK-1, the switch only bypasses the EQ section — the circuit still requires a battery to function. ","date":"2023-05-30","objectID":"/cort-bass-active-electronics/:1:0","tags":["bass guitar","active preamp","measurements","analog-electronics","fretless"],"title":"Bass Guitar preamps comparison: Bartolini MK-1 vs. MarkBass MB-1","uri":"/cort-bass-active-electronics/"},{"categories":["Research and Education"],"content":"Overview of the Preamp Architectures Function Markbass MB-1 Bartolini MK-1 Switch function Full passive mode EQ bypass only Battery-less operation Yes No Tone control gains TBD TBD Noise figure TBD TBD While both preamps share identical pinouts and footprint (e.g., interchangeable within similar bass bodies), their internal circuitry reveals a stark contrast in engineering choices. ","date":"2023-05-30","objectID":"/cort-bass-active-electronics/:2:0","tags":["bass guitar","active preamp","measurements","analog-electronics","fretless"],"title":"Bass Guitar preamps comparison: Bartolini MK-1 vs. MarkBass MB-1","uri":"/cort-bass-active-electronics/"},{"categories":["Research and Education"],"content":"Bartolini MK-1 Reverse Engineering Component side of the Bartolini MK-1 PCB. The MK-1’s circuit is composed entirely of surface-mount components on a silkscreen-free PCB. A polarity protection diode is soldered directly across the battery terminals, and all signal processing is handled by three TL062 dual op-amps (JRC). Two tantalum capacitors act as low-leakage filters, stabilizing the V/2 bias voltage derived from the 9V power supply. Power supply stage. Battery ground is activated by cable insertion, not shown here. ","date":"2023-05-30","objectID":"/cort-bass-active-electronics/:3:0","tags":["bass guitar","active preamp","measurements","analog-electronics","fretless"],"title":"Bass Guitar preamps comparison: Bartolini MK-1 vs. MarkBass MB-1","uri":"/cort-bass-active-electronics/"},{"categories":["Research and Education"],"content":"MK-1 Signal Path and Schematic Wiring of pickups and balancer dual-potentiometer to the PCB connector. The input stage consists of passive pickups routed through a balancer potentiometer and passed to a unity-gain op-amp stage. The initial preamp output is then routed via the switch to either: The output jack (EQ bypassed), or The three-band EQ section. Input buffer stage. Unity gain is set via 3.9k resistors. The input coupling capacitors are 100nF, forming a high-pass filter. Substituting these with 1uF+ electrolytics would extend the bass range but may increase susceptibility to microphonic or subsonic noise (e.g., from finger taps). EQ stage after the bypass switch. One op-amp section remains unused with floating pins. An important note: one op-amp remains entirely unconnected, with floating inputs, which is generally considered poor practice. Connecting the non-inverting input to ground and configuring it as a buffer (unity gain) would reduce potential noise and mitigate risk of RF interference or parasitic oscillation. ","date":"2023-05-30","objectID":"/cort-bass-active-electronics/:3:1","tags":["bass guitar","active preamp","measurements","analog-electronics","fretless"],"title":"Bass Guitar preamps comparison: Bartolini MK-1 vs. MarkBass MB-1","uri":"/cort-bass-active-electronics/"},{"categories":["Research and Education"],"content":"Markbass MB-1 Reverse Engineering Markbass MB-1 component side PCB. (Section under construction — the following will be added soon:) Full schematic diagram Component analysis and values Tone control architecture Comparison of output impedance and gain stages ","date":"2023-05-30","objectID":"/cort-bass-active-electronics/:4:0","tags":["bass guitar","active preamp","measurements","analog-electronics","fretless"],"title":"Bass Guitar preamps comparison: Bartolini MK-1 vs. MarkBass MB-1","uri":"/cort-bass-active-electronics/"},{"categories":["Research and Education"],"content":"Conclusion This side-by-side comparison of the MK-1 and MB-1 reveals a shared design context (modern active bass electronics with 3-band EQ and pickup balance), but divergent internal strategies. The Bartolini MK-1 is minimal and efficient but lacks a true passive mode and contains some questionable design choices like unused op-amps. The Markbass MB-1 appears to offer a more flexible and serviceable approach, with passive fallback — but a detailed teardown will confirm or refute this in the upcoming update. ","date":"2023-05-30","objectID":"/cort-bass-active-electronics/:5:0","tags":["bass guitar","active preamp","measurements","analog-electronics","fretless"],"title":"Bass Guitar preamps comparison: Bartolini MK-1 vs. MarkBass MB-1","uri":"/cort-bass-active-electronics/"},{"categories":["Software and Code"],"content":"PiKrellCam Reborn Logger UI panel. ","date":"2022-10-29","objectID":"/pikrellcam-environmental-logger/:0:0","tags":["open-source","rpi","video"],"title":"PikrellCam Motion-detection plus temperature Logger","uri":"/pikrellcam-environmental-logger/"},{"categories":["Software and Code"],"content":"Motion Detection with Sensor Data Logger One of the most used motion detection and surveillance software for the Raspberry Pi with additional temperature and humidity logging and graph panel. Sensor Logger UI panel. This fork introduces an additional web-dashboard driven by a sqlite database to keep track of temperature and humidity readings coming from a HDC1080 sensor. This dashboard is accessible by the main page of the camera preview bringing in some statistics of the collected data. It is aimed at: tracking sensor data; keeping the original motion detection component alive and updated; improve its original web interface with modern components; building a nice dashboard for one or more sensors (via I2C interface or external ESP32s); ","date":"2022-10-29","objectID":"/pikrellcam-environmental-logger/:1:0","tags":["open-source","rpi","video"],"title":"PikrellCam Motion-detection plus temperature Logger","uri":"/pikrellcam-environmental-logger/"},{"categories":["Software and Code"],"content":"Current state (work in progress) October 2022 Changed most (if not all) of the original source code indentation style ;) Updated web components with recent versions (jQuery) Introducing bootstrap CSS for the logger dashboard and the main interface Added working support to a single HDC1080 temperature and humidity sensor via Python over I2C interface Danger The legacy camera interface has been deprecated from Raspbian OS. Future version will need to be totally rewritten. ","date":"2022-10-29","objectID":"/pikrellcam-environmental-logger/:2:0","tags":["open-source","rpi","video"],"title":"PikrellCam Motion-detection plus temperature Logger","uri":"/pikrellcam-environmental-logger/"},{"categories":["Software and Code"],"content":"Logger Dashboard The original PHP code from raspberry_temperature_log written by Paweł Spychalski has been adapted to be used within this project. ","date":"2022-10-29","objectID":"/pikrellcam-environmental-logger/:3:0","tags":["open-source","rpi","video"],"title":"PikrellCam Motion-detection plus temperature Logger","uri":"/pikrellcam-environmental-logger/"},{"categories":["Software and Code"],"content":"Legacy Version PiKrellCam is an audio/video recording motion detect program with an OSD web interface that detects motion using the Raspberry Pi camera MMAL motion vectors. ","date":"2022-10-29","objectID":"/pikrellcam-environmental-logger/:4:0","tags":["open-source","rpi","video"],"title":"PikrellCam Motion-detection plus temperature Logger","uri":"/pikrellcam-environmental-logger/"},{"categories":["Software and Code"],"content":"Source Code The repo contains the source code. ","date":"2022-10-29","objectID":"/pikrellcam-environmental-logger/:5:0","tags":["open-source","rpi","video"],"title":"PikrellCam Motion-detection plus temperature Logger","uri":"/pikrellcam-environmental-logger/"},{"categories":["Software and Code"],"content":"Legacy version Read about it and install instructions at: PiKrellCam webpage Original repository: $ git clone https://github.com/billw2/pikrellcam ","date":"2022-10-29","objectID":"/pikrellcam-environmental-logger/:6:0","tags":["open-source","rpi","video"],"title":"PikrellCam Motion-detection plus temperature Logger","uri":"/pikrellcam-environmental-logger/"},{"categories":["Software and Code"],"content":"A logging utility for the GW-Instek GPM8310 AC/DC Power Meter using SCPI over Telnet.","date":"2021-01-19","objectID":"/electrical-power-measurements/","tags":["measurements","scpi","power-meter","data-logging"],"title":"Data Logger for Electrical Power Measurements","uri":"/electrical-power-measurements/"},{"categories":["Software and Code"],"content":"Foreword Measuring electrical power—whether consumed or supplied—over long durations can be essential for analyzing appliance behavior, validating designs, or performing reliability testing. Some measurement sessions may extend over hours or even days. In such scenarios, having a reliable software tool that can log data continuously, plot graphs, and export datasets becomes invaluable. To support this need, I developed a utility named GPMLink, which interfaces with the GW-Instek GPM8310 power meter. The software uses a Telnet-based interface to communicate with the device and periodically queries it using SCPI commands to retrieve integrated power metrics. GW-Instek Power Meter GPM8310 front panel. If you own a GPM8310, you can try out GPMLink. The source code is openly available. Although prebuilt binaries are not provided yet, compiling it is straightforward using Visual Studio Community or any other compatible IDE. GPMLink GPMLink is a .NET-based utility that supports both WinForms and WPF frontends (with a .NET Core version under development). It allows users to perform extended power measurements and log them to CSV files with adjustable polling intervals. ","date":"2021-01-19","objectID":"/electrical-power-measurements/:0:0","tags":["measurements","scpi","power-meter","data-logging"],"title":"Data Logger for Electrical Power Measurements","uri":"/electrical-power-measurements/"},{"categories":["Software and Code"],"content":"The Power Meter: GW-Instek GPM-8310 The GPM-8310 is a precision digital power meter designed for single-phase (1P/2W) AC and DC measurements. Key specifications include: Bandwidth: DC, 0.1 Hz–100 kHz Sampling Rate: 300 kHz ADC Resolution: 16 bits Display: 5” TFT LCD (five-digit display) Measurement Parameters: 25+ (voltage, current, power, energy, phase, etc.) Features: waveform display, harmonic analysis, integration measurements, external sensor support This model strikes a solid balance between performance and cost, offering high measurement precision and flexible interface options. Product Page → Datasheet / Specifications → ","date":"2021-01-19","objectID":"/electrical-power-measurements/:1:0","tags":["measurements","scpi","power-meter","data-logging"],"title":"Data Logger for Electrical Power Measurements","uri":"/electrical-power-measurements/"},{"categories":["Software and Code"],"content":"Communication and Polling Rate The GPM-8310 provides several communication interfaces: RS232C, USB, Ethernet, and GPIB. GPMLink relies on the Ethernet port and communicates over Telnet using SCPI (Standard Commands for Programmable Instruments) to control the device and fetch measurements. The logging interval can be configured between 0.5 seconds to 2 seconds. While this may seem slow, it’s important to note that the GPM samples data internally at much higher rates. It computes averages or integrated values over time, which are retrieved through SCPI queries. These include: Instantaneous and average voltage/current Active, apparent, and reactive power Energy totals (Wh, Ah) Frequency and phase angle Harmonics and THD (Total Harmonic Distortion) This architecture ensures high precision even with infrequent polling, making it ideal for long-term logging. ","date":"2021-01-19","objectID":"/electrical-power-measurements/:2:0","tags":["measurements","scpi","power-meter","data-logging"],"title":"Data Logger for Electrical Power Measurements","uri":"/electrical-power-measurements/"},{"categories":["Software and Code"],"content":"Gallery Whether you’re monitoring power consumption in a lab, validating the behavior of an embedded device under load, or just trying to keep track of energy usage in real-time, GPMLink offers a customizable and transparent solution. ","date":"2021-01-19","objectID":"/electrical-power-measurements/:3:0","tags":["measurements","scpi","power-meter","data-logging"],"title":"Data Logger for Electrical Power Measurements","uri":"/electrical-power-measurements/"},{"categories":["Software and Code"],"content":"SCPI Command Reference The GW-Instek GPM-8310 supports SCPI (Standard Commands for Programmable Instruments), a standardized command language widely used for controlling test and measurement equipment. GPMLink communicates via Telnet by sending SCPI queries and parsing the responses. Below is a brief overview of commonly used SCPI commands in the application: Command Description *IDN? Queries the identity string of the instrument (manufacturer, model, firmware). MEAS:VOLT? Measures the RMS voltage of the current channel. MEAS:CURR? Measures the RMS current. MEAS:POW? Retrieves the active power (Watts). MEAS:ENER? Retrieves the accumulated energy (Wh or Ah). SYST:ERR? Returns system error status. FUNCtion:IMMediate:POWer? Reads instantaneous power measurement. MEAS:ALL? Custom compound command to retrieve all configured measurements in a single call (used for efficient polling). These commands are periodically issued by the logger to build a continuous dataset, which is stored in CSV format for later analysis. For a full list of supported SCPI commands, refer to the official GPM-8310 programming manual. ","date":"2021-01-19","objectID":"/electrical-power-measurements/:4:0","tags":["measurements","scpi","power-meter","data-logging"],"title":"Data Logger for Electrical Power Measurements","uri":"/electrical-power-measurements/"},{"categories":["Software and Code"],"content":"Sample CSV Log Output GPMLink continuously polls the power meter and appends each measurement to a CSV file. Each row represents one snapshot in time, including a timestamp and key electrical parameters. Here’s a short example of a CSV output: Timestamp, Voltage (V), Current (A), Power (W), Energy (Wh), Power Factor 2024-12-01 14:00:00, 230.12, 0.545, 125.67, 10.35, 0.98 2024-12-01 14:00:01, 229.95, 0.548, 126.12, 10.37, 0.97 2024-12-01 14:00:02, 230.08, 0.550, 126.56, 10.39, 0.98 ... ## SCPI Parsing Logic Once a SCPI command is sent via Telnet, the GPM-8310 replies with a plain text string, typically terminated by a newline (`\\n`). The structure of the reply depends on the command. ### Example 1 – Single Value MEAS:VOLT? \u003c 230.12 This can be parsed directly as a floating-point number. ### Example 2 – Compound Measurement MEAS:ALL? \u003c 230.12,0.545,125.67,10.35,0.98 When multiple values are returned, they are comma-separated. In this case: - `230.12` → Voltage (V) - `0.545` → Current (A) - `125.67` → Active Power (W) - `10.35` → Energy (Wh) - `0.98` → Power Factor These values are split by comma and mapped to their corresponding headers in the CSV file. ### Python-style Pseudocode ```python response = \"230.12,0.545,125.67,10.35,0.98\" fields = response.strip().split(\",\") voltage = float(fields[0]) current = float(fields[1]) power = float(fields[2]) energy = float(fields[3]) pf = float(fields[4]) Error handling is also implemented: if the device returns an unexpected value or times out, the software skips that row and logs the issue separately, ensuring data integrity over long logging sessions. ","date":"2021-01-19","objectID":"/electrical-power-measurements/:5:0","tags":["measurements","scpi","power-meter","data-logging"],"title":"Data Logger for Electrical Power Measurements","uri":"/electrical-power-measurements/"},{"categories":["Hardware Builds"],"content":"3D study of a magnetic levitation organ keyboard","date":"2020-07-02","objectID":"/kayaboard/","tags":["hammond","keyboard"],"title":"KAYABOARD - mag-lev organ keyboard (POC)","uri":"/kayaboard/"},{"categories":["Hardware Builds"],"content":"This is a Proof-Of-Concept of an organ keyboard using magnets instead of springs to obtain a nice upward release action and a decent downward counter-pressure when playing. Designing a musical-instrument keyboard confronted me with some ergonomics considerations and material choices. I did some research on magnets as well, to have a better understanding of their force irradiation and how to select them to save space, weight and achieve the best feeling when playing. ","date":"2020-07-02","objectID":"/kayaboard/:0:0","tags":["hammond","keyboard"],"title":"KAYABOARD - mag-lev organ keyboard (POC)","uri":"/kayaboard/"},{"categories":["Hardware Builds"],"content":"The model I always admired the acoustic piano keyboard mechanics: it is a concoction-masterpiece! It is by any means totally different from an organ manual, was the original inspiration as I wanted to understand the way it actually works. There are so many different mechanics and techniques (such as Renner) and they all implements some kind of escapement mechanism and trickery to give the player the best comfort. a Grand Piano mechanical action. ","date":"2020-07-02","objectID":"/kayaboard/:1:0","tags":["hammond","keyboard"],"title":"KAYABOARD - mag-lev organ keyboard (POC)","uri":"/kayaboard/"},{"categories":["Hardware Builds"],"content":"Insights on the real Piano action Spacing 1/2. The black keys on a piano keyboard, instead of always being centered on the dividing line between the two white keys they lie between, are spaced so that the twelve keys which make up an octave are spaced equally as they enter the internal mechanism of the instrument. However, the white keys as they face the performer are still equal in width. As the space from C to E contains three white keys and five keys in total, while the space from F to B contains four white keys and seven keys in total, it is not quite possible to achieve this goal perfectly. If the internal spacing for the internals of a piano or organ is perfect, giving each of the twelve notes of the octave units of width on the keyboard, then the three white keys for C, D, and E would be 20 units wide, while the white keys for F, G, A, and B would be 21 units wide. If, on the other hand, the white keys present themselves with an absolutely equal width of 35 units each to the performer, then the five notes from C through E would be 21 units wide as they entered the instrument, and the seven notes from F through C would be 20 units wide as they entered the instrument. Since the internal mechanisms of a piano and organ could still have an exact equal spacing where they contacted the keys of the keyboard even if the latter alternative was chosen, that alternative, providing a better human interface, is likely to be the one used. In any case, what then are the nominal dimensions of a piano keyboard, ignoring the space between keys which will be required for them to move freely? While the keys on a typewriter keyboard are spaced on 3/4 inch intervals (19.05 millimetres), piano keys are somewhat larger, at least on a full-sized keyboard. One source, the book Electronic Musical Instruments by Richard H. Dorf, notes the dimension as being in the vicinity of 6.46 inches, with slight variations between manufacturers for a range from about 164 mm to 164.2 mm. 164 millime","date":"2020-07-02","objectID":"/kayaboard/:2:0","tags":["hammond","keyboard"],"title":"KAYABOARD - mag-lev organ keyboard (POC)","uri":"/kayaboard/"},{"categories":["Hardware Builds"],"content":"Engineering Notes Key Layout: Follows 7 white / 5 black key model per octave. Total key travel is approx. 10–12 mm. Magnets: Neodymium disc magnets provide upward force. By spacing opposing polarities, we achieve a ‘levitation’ feel. Sensor Interface: IR emitter/photodiode pairs across each key slot. Controller: STM32 with ADC and digital input scanning. Output: MIDI over USB (USB CDC) or traditional 5-pin DIN MIDI. Spacing 3. ","date":"2020-07-02","objectID":"/kayaboard/:3:0","tags":["hammond","keyboard"],"title":"KAYABOARD - mag-lev organ keyboard (POC)","uri":"/kayaboard/"},{"categories":["Hardware Builds"],"content":"Conclusion The Kayaboard combines magnetic engineering, optical sensing, and precise key sizing to create a unique mechanical keyboard instrument. Its modularity and tweakable feel make it ideal for experimental setups, organ emulators, or custom MIDI rigs. More updates to follow as the firmware matures and the enclosure evolves! ","date":"2020-07-02","objectID":"/kayaboard/:4:0","tags":["hammond","keyboard"],"title":"KAYABOARD - mag-lev organ keyboard (POC)","uri":"/kayaboard/"},{"categories":["Hardware Builds"],"content":"Back to the '60s with a self-assembly amp kit!","date":"2016-10-30","objectID":"/geloso-tube-amp-restoration/","tags":["restoration","tube-amps","analog-electronics"],"title":"Restoration of an old open-air cinema PA","uri":"/geloso-tube-amp-restoration/"},{"categories":["Hardware Builds"],"content":"GELOSO Geloso, founded in 1931 by Giovanni Geloso, was an Italian manufacturer of radios, televisions, amplifiers, amateur radio receivers, audio equipment and electronic components. Its headquarters were situated in Milan, Viale Brenta 29. In 1931 the company started the production not only of radio sets but also most of the electronic components with which they were built and, over time, also developed and patented many others. After the Second World War, Geloso expanded and expanded his production, becoming from 1950 onwards, a point of reference for enthusiasts of consumer electronics and hobbyists. The many products under the brand name Geloso were known throughout Italy and much appreciated abroad. The output consisted of innovative products known for their high quality, solid construction and reasonable price. The main production consisted of radios, amplifiers, tape recorders, televisions, kits, and professional laboratory instruments. These were complemented by components such as capacitors, resistors, potentiometers, switches, connectors, transformers and microphones. It is fashinating to know that this very amplifier was sold as a self-assembly kit and its build-date goes back to the mid ’70s. An exact date cannot be determined, but my friend gave this rough estimation. ","date":"2016-10-30","objectID":"/geloso-tube-amp-restoration/:0:0","tags":["restoration","tube-amps","analog-electronics"],"title":"Restoration of an old open-air cinema PA","uri":"/geloso-tube-amp-restoration/"},{"categories":["Hardware Builds"],"content":"From assembly kit to summer-night cinema Time ago a friend of mine gave me this pretty nice old cinema PA. It was not in good-shape as it has been left down in a storage room, with no much protection against humidity, dust and alike, all eroding agents for any electronic devices. Remarkably this is an assembled kit, made by this friends’ uncle back before the 70s. Back in its hey-days this very tube amplifier from GELOSO was used to amplify a cosy open-air cinema in warm summer nights in Italy between 1970 and late 1980. Believe it or not, audio quality was not an issue (it is not an Hi-Fi grade amp) but for spoken voice and those early sound effects present in films in the early ’80s, it was more than enough even for an open space. People were not even fussier about wanting a subwoofer or enjoy explosions like modern days: people just wanted to gather together and follow a nice story. So long for todays’ tastes… Anyway, here it is: it all its old and present glory, the GELOSO G-225/A. GELOSO Amplifier. Amplificatore G-225/A Potenza modulata 25W - 6L6 push-pull class AB1 - 5 valvole - 2 prese mic e 2 prese pick-up con mixer - Guadagno 100.000 volte il segnale d’entrata Le due prese per microfono e le due per pick-up, i tre potenziometri di volume e due regolazioni di tono, il cambio delle tensioni e gli attacchi razionali di entrata e di uscita aggiunti alla possibilità di misclare i segnali dei diversi canali rendevano questo apparecchio adattabile alle più svariate installazioni: dagli ambienti chiusi di piccola capacità alle chiese ed ai cinematografi di capienza anche superiore alla media del periodo. I 25W di potenza utile effettivamente disponibili al secondario del trasformatori erano sufficienti per alimentare un numero considerevole di altoparlanti e permettere una razionale diffusione del suono. Tale caratteristica lo rendevano particolarmente adatto ad installazioni di capacità superiore alla media e nelle quali era richiesta una elevata (per l’epoca) fed","date":"2016-10-30","objectID":"/geloso-tube-amp-restoration/:1:0","tags":["restoration","tube-amps","analog-electronics"],"title":"Restoration of an old open-air cinema PA","uri":"/geloso-tube-amp-restoration/"},{"categories":["Hardware Builds"],"content":"Dati tecnici Potenza nominale: 25W (+36,2dB) 5% THD Potenza di picco: 35W (+37,7dB) Sensibilità micro: 4mV (-85,8dB) Z = 1MΩ Guadagno micro: +122 dB Sensibilità fono: 170mV (-52,,1) Z = 1MΩ Guadagno fono: +89,3dB Noise Floor: -68dB a massimo guadagno Frequency Response: ±3dB 50Hz a 10kHz Impedenze di Uscita in Ohm: 1,25 - 2,5 - 5(balanced) - 7,5 - 10(bal) - 14 - - 18 - 30(bal) - 75 - 100 - 125 - 300(bal) - 350 - 400 (bal) - 450 - 500(bal) Controlli di tono acuti: -15/+6dB (5kHz) -21dB/+7dB (10kHz) Controlli di tono bassi: -10/+6dB (100Hz) -18dB/+6dB (50Hz) Valvole: 2x 12SL7-GT; 1x 6J5-GT; 2x 6L6-G; 1x5X4-G Tensioni di linea: 110 - 125 - 140 - 160 - 220 - 280VAC Potenza assorbita AC: 170 VA Dimensioni: 390x220x232 mm Peso: 13,5 Kg ","date":"2016-10-30","objectID":"/geloso-tube-amp-restoration/:2:0","tags":["restoration","tube-amps","analog-electronics"],"title":"Restoration of an old open-air cinema PA","uri":"/geloso-tube-amp-restoration/"},{"categories":["Hardware Builds"],"content":"Potenza GELOSO Amplifier. L’amplificatore G275/A ha una potenza di uscita di 25W. La distorsione contenuta nettamente entro un limite del 5%. Diminuendo la potenza d’uscita diminuisce rapidamente anche la percentuale di distorsione come visibile nella curva esplicativa: THD vs. Output Power. La potenza di picco è di 35\" (+37,7dB). Con la sostituzione del normale trasformatore n.5407, il G225/A può essere usato come modulatore di uno stadio finale RF con 50W di alimentazione ed una modulazione del 100%, oppure fino a 70W con una modulazione dell'80%. ","date":"2016-10-30","objectID":"/geloso-tube-amp-restoration/:2:1","tags":["restoration","tube-amps","analog-electronics"],"title":"Restoration of an old open-air cinema PA","uri":"/geloso-tube-amp-restoration/"},{"categories":["Hardware Builds"],"content":"Ronzio e rumore di fondo Il ronzio ed i rumori di fondo sono stati ridotti a -68dB a massimo guadagno di uscita e cioè a circa 1/2500 del segnale di uscita. ","date":"2016-10-30","objectID":"/geloso-tube-amp-restoration/:2:2","tags":["restoration","tube-amps","analog-electronics"],"title":"Restoration of an old open-air cinema PA","uri":"/geloso-tube-amp-restoration/"},{"categories":["Hardware Builds"],"content":"Sensibilità La sensibilità dei canali micro è di 4mV, pari a -85,8dB. Con un segnale di soli 4mV, l’apparecchio da la piena potenza, per cui risulta superfluo l’uso di preamplificatori anche nel caso di microfoni meno sensibili. Per i canali phono, la sensibilità è di 180mV, pari a -53,1dB e sufficiente anche per l’uso di pick-up magnetici meno sensibili. Sensitivity. Il criterio che ha ispirato, in sede di progettao, la separazione dei due canali micro da quello pick-up è stato di evitare, nel caso di pick-ups di forte uscita, il fenomeno di saturazione e di distorsione nella prima valvola e per dare la possibiltà di mescolare a piacere, a mezzo dei rispettivi controlli di volume, i segnali dei due canali. . ","date":"2016-10-30","objectID":"/geloso-tube-amp-restoration/:2:3","tags":["restoration","tube-amps","analog-electronics"],"title":"Restoration of an old open-air cinema PA","uri":"/geloso-tube-amp-restoration/"},{"categories":["Hardware Builds"],"content":"Circuiti di entrata Nell’amplificatore G.225/A vi sono due prese per microfoni e due per fono, tutte ad alta impedenza (1MOhm). Esistono tre controlli di volume: uno per ciascun microfono ed uno per i pick-ups. Detti controlli sono separati e danno la possibilità di miscelare a piacere i segnali dei vari circuiti. Per mezzo delle due prese fono è data pure la possibilità di ridurre al minimo le pause nella riproduzione dei dischi. Nel caso di microfoni a bassa impedenza (nastro e dinamici) occorre, per avere la massima resa, accoppiare questi microfoni attraverso un trasformatore elevatore, convenientemente schermato. ","date":"2016-10-30","objectID":"/geloso-tube-amp-restoration/:2:4","tags":["restoration","tube-amps","analog-electronics"],"title":"Restoration of an old open-air cinema PA","uri":"/geloso-tube-amp-restoration/"},{"categories":["Hardware Builds"],"content":"Schematic Schematics. Alle griglie dei due triodi della prima 12SL7, sono applicate le boccole di entrata dei due microfoni. Alla griglia del primo triodo della seconda 12SL7 è applicato, attraverso un commutatore, l’ingresso pick-up. L’accoppiamento tra i due triodi della prima 12SL7 e la seconda è a resistenza-capacità con particolari accorgimenti per permettere la miscelazione dei due microfoni e di un pick-up e di regolare separatamente, a mezzo di tre potenziometri, il volume dei singoli canali. L’intermodulazione tra i due canali micro, con entrambi i microfoni inseriti, è trascurabile. Tra il primo ed il secondo triodo della seconda 12SL7 e tra questo e la 6J5 invertitrice di fase sono realizzati i circuiti del controllo di toni. I toni alti utilizzano un potenziometro logaritmico da 2MΩ, mentre al controllo dei bassi un doppio potenziometro: quello da 500kΩ logaritmico serve per eliminare il rialzo alle note basse dato dal condensatore da 10000pF in parallelo ad esso; l’altro da 500kΩ lineare ha il compito, variando la resistenza di griglia della 6J6, di diminuire la sensibilità dell’amplificatore alle note basse. Lo stadio finale è costituito da due 6L6 in configurazione push-pull. Il circuito di alimentazione è costituito da un trasformatore di alimentazione, da una 5X4 raddrizzatrice doppia onda e dai circuiti di filtro. Il condensatore di ingresso è da 32uF 500V e da esso vengono alimentate le placche dello stadio finale. Segue un partitore formato da due candele, una da 2000Ω 6W, ed una da 7500Ω 123W; in parallelo alla resistenza da 7500Ω 12W vi è un condensatore da 16uF 500V. Da questo punto del circuito vengono alimentati gli schermi dello stadio finale; segue una resistenza da 5000Ω ed un condensatore da 32uF 500V. Qui è collegata la resistenza di placca della 6J5 e della placca del secondo triodo della seconda 12SL7. Segue una resistenza da 7500Ω ed un condensatore da 16uF 350V. Da questo punto parte l’alimentazione delle placche del primo triodo de","date":"2016-10-30","objectID":"/geloso-tube-amp-restoration/:3:0","tags":["restoration","tube-amps","analog-electronics"],"title":"Restoration of an old open-air cinema PA","uri":"/geloso-tube-amp-restoration/"},{"categories":["Hardware Builds"],"content":"Montaggio Assembly. Il montaggio dell’amplificatore G225/A non richiede speciali accorgimenti: basta attenersi con scrupolo ed intelligenza alle indicazioni dello schema elettrico e di quello di montaggio. Fissare innanzi tutto al telaio le parti meccaniche: zoccoli per le valvole, attacchi micro e fono, potenziometri, impedenze, trasformatori, condensatori elettrolitici. È necessario osservare l’orientamento indicato nello schema costruttivo che fornisce indicazioni per la realizzazione della filatura. Collegare innanzitutto le parti vicine al telaio. Fare attenzione nell’eseguire i collegamenti del raddrizzatore ad ossido e degli elettrolici, perchè un errore potrebbe provocare gravi danni all’apparecchio. Il collegamento delle prese mico deve risultare secondo la disposizione prestabilita, unificata per tutti gli apparecchi. Ad evitare la formazione di fruscii e di rumori curare attentamente le saldature. Per ultimo dovrà essere montato lo schermo di protezione delle prese d’ingresso. La basetta porta-resistenze si prepara separatamente. A montaggio terminato verificare con l’ohmetro gli isolamenti in particolare dei lati caldi da massa. Inserire la valvola raddrizzatrice e verificare la tensione, inserire le prime due valvole e verificare il negativo; inserire le restanti valvole. Tutte le tensioni devono corrispondere a quelle della tabella qui riportata. ","date":"2016-10-30","objectID":"/geloso-tube-amp-restoration/:4:0","tags":["restoration","tube-amps","analog-electronics"],"title":"Restoration of an old open-air cinema PA","uri":"/geloso-tube-amp-restoration/"},{"categories":["Hardware Builds"],"content":"Verifica delle tensioni Riscontrata l’esattezza dei collegamenti e la loro continuità, si proceda alla verifica delle tensioni. La misurazione di queste deve essere effettuata sia al primario del trasformatore di alimentazione, per verificare la tensione di rete, sia ai circuiti secondari e interni all’apparecchio. Per il controllo delle tensioni alternate potrà essere usato un qualsiasi voltmetro a ferro mobile o a raddrizzatore, purchè sufficientemente preciso. Per la misurazione delle correnti continue è invece necessario usare un voltmetro a bobina mobile a 20.000Ω per volt, poichè i valori della tabella che segue sono stati rilevati con uno strumento di tali caratteristiche. Qualora il tecnico disponesse di uno strumento di diverse caratteristiche, cioè di differente resistenza interna, si dovrà tener conto dell’eventuale caduta di tensione nelle resistenze del circuito al qualie si applica lo strumento, dovuta al maggior consumo di questo. Le tensioni riscontrate dovranno essere comprese entro il 5% in più o in meno dei seguenti valori, ferma restando la tensione di rete al valor indicato sul cambio di tensioni, e dovranno essere misurate tra i piedini delle valvole e la massa. Per l’uso si può ammettere che la tensione di rete varii al massimo entro una tolleranza del 10% in più o in meno. TABELLA DELLE TENSIONI Alta tensione 1° Elettrolitico . . . . . . . . . . . 400V 2° Elettrolitico . . . . . . . . . . . 300V 3° Elettrolitico . . . . . . . . . . . 280V 4° Elettrolitico . . . . . . . . . . . 270V / griglia . . . . . . . . . . -25V 6L6-G | schermo . . . . . . . . . . 300V \\ placca . . . . . . . . . . 400V / placca . . . . . . . . . . 215V 6L5-GT | \\ catodo . . . . . . . . . . . 57V / placca . . . . . . . . 90V 12SL7-GT | catodo . . . . . . . .. 1,2V | placca . . . . . . . . .130V \\ catodo . . . . . . . . .1,6V / placca . . . . . . . . 160V 12SL7-GT | catodo . . . . . . . .. 1,7V | placca . . . . . . . . .160V \\ catodo . . . . . . . . .1,7V Tensione negativa ","date":"2016-10-30","objectID":"/geloso-tube-amp-restoration/:4:1","tags":["restoration","tube-amps","analog-electronics"],"title":"Restoration of an old open-air cinema PA","uri":"/geloso-tube-amp-restoration/"},{"categories":["Research and Education"],"content":"An AM audio modulator and transmitter, and some other radio experiments.","date":"2015-01-19","objectID":"/analog-radio/","tags":["radio","ham","arduino","analog-electronics"],"title":"AM Radio on Arduino UNO","uri":"/analog-radio/"},{"categories":["Research and Education"],"content":"🛠️ Introduction This blog article gathers a series of DIY radio experiments, ranging from early analog detection with Galena crystal receivers to digitally driven AM transmission via Arduino microcontrollers. Inspired by a love for vintage radio sets and low-power communication techniques, this collection explores both the simplicity of early unpowered detection and the elegance of amplitude modulation (AM) implemented in modern embedded systems. These are primarily short-range (QRP) experiments — ideal for educational settings, hobbyists, and radio tinkerers looking to bridge past and present technologies. ","date":"2015-01-19","objectID":"/analog-radio/:1:0","tags":["radio","ham","arduino","analog-electronics"],"title":"AM Radio on Arduino UNO","uri":"/analog-radio/"},{"categories":["Research and Education"],"content":"📻 Arduino AM Modulator The first project demonstrates a very low-power AM transmitter centered around an Arduino UNO. Operating on the LW (Longwave) radio band at ~734 kHz, this setup modulates an audio signal onto a PWM-generated carrier, which can be picked up by standard analog radio receivers — particularly older models with wideband AM capability. The Arduino plays a dual role: It uses its Timer2 hardware peripheral to synthesize a high-frequency PWM signal (~730–760 kHz), which acts as the AM carrier wave. Simultaneously, the Arduino samples audio input using its 10-bit ADC (analog-to-digital converter), and modulates the duty cycle of the carrier in real-time according to the input amplitude — thus implementing Amplitude Modulation in software. The circuit uses just a few passive components: L1 (47 µH) and C2 (1 nF) form a tank circuit to filter and tune the PWM output. The antenna is driven directly from a digital output pin, typically through a series capacitor to block DC offset. A pair of resistors and a capacitor at the analog input side filter and attenuate the audio signal. ","date":"2015-01-19","objectID":"/analog-radio/:2:0","tags":["radio","ham","arduino","analog-electronics"],"title":"AM Radio on Arduino UNO","uri":"/analog-radio/"},{"categories":["Research and Education"],"content":"ARDUINO AM SOURCE CODE // Simple AM Radio Signal Generator :: Markus Gritsch // http://www.youtube.com/watch?v=y1EKyQrFJ-o #define INPUT_PIN 0 // ADC input pin #define TIMER_PIN 3 // PWM output pin, OC2B (PD3) #define DEBUG_PIN 2 // to measure the sampling frequency #define LED_PIN 13 // displays input overdrive #define SHIFT_BY 3 // 2 ... 7 input attenuator #define TIMER_TOP 20 // determines the carrier frequency #define A_MAX TIMER_TOP / 4 void setup() { pinMode(DEBUG_PIN, OUTPUT); pinMode(TIMER_PIN, OUTPUT); pinMode(LED_PIN, OUTPUT); // set ADC prescaler to 16 to decrease conversion time ADCSRA = (ADCSRA | _BV(ADPS2)) \u0026 ~( _BV(ADPS1) | _BV(ADPS0)); // configure timer: non-inverting, fast PWM, no prescaling TCCR2A = 0b10100011; TCCR2B = 0b00001001; // 16E6 / (OCR2A + 1) = ~762 kHz at TIMER_TOP = 20 OCR2A = TIMER_TOP; OCR2B = TIMER_TOP / 2; // 50% duty cycle } void loop() { digitalWrite(DEBUG_PIN, HIGH); int8_t value = (analogRead(INPUT_PIN) \u003e\u003e SHIFT_BY) - (1 \u003c\u003c (9 - SHIFT_BY)); digitalWrite(DEBUG_PIN, LOW); if (value \u003c -A_MAX) { value = -A_MAX; digitalWrite(LED_PIN, HIGH); } else if (value \u003e A_MAX) { value = A_MAX; digitalWrite(LED_PIN, HIGH); } else { digitalWrite(LED_PIN, LOW); } OCR2B = A_MAX + value; } ","date":"2015-01-19","objectID":"/analog-radio/:2:1","tags":["radio","ham","arduino","analog-electronics"],"title":"AM Radio on Arduino UNO","uri":"/analog-radio/"},{"categories":["Research and Education"],"content":"🧰 Arduino AM Source Code Breakdown The source code leverages Timer2 in fast PWM mode, where OCR2A determines the carrier frequency and OCR2B the amplitude (duty cycle). The modulation occurs by updating OCR2B with values derived from the analog input: Input signal is sampled with reduced resolution using a bit-shift (\u003e\u003e SHIFT_BY) to match the PWM granularity. Clipping logic ensures that the duty cycle remains within a usable range, preventing distortion or signal overflow. A debug pin toggles during each read to measure the effective sampling rate (about 34 kHz). 💡 This implementation demonstrates a clever use of limited hardware to emulate AM transmission using nothing more than software PWM and some passive RF filtering. ","date":"2015-01-19","objectID":"/analog-radio/:3:0","tags":["radio","ham","arduino","analog-electronics"],"title":"AM Radio on Arduino UNO","uri":"/analog-radio/"},{"categories":["Research and Education"],"content":"📡 Arduino AM CW (Morse Code Transmission) The second project transmits Morse code (CW) over AM by toggling a digital output pin in software. The transmitter generates bursts of a square wave at approximately 1.3 MHz, again driving a simple wire antenna. Key characteristics: DITs and DAHs (short and long Morse pulses) are defined in terms of “port toggles”, allowing precise control over timing using software loops. The signal is created by manually cycling PORTB through values with tight while loops, making it hardware-timed without delay functions. A clever use of inline assembly (asm volatile (\"inc %0\")) ensures efficient register manipulation and consistent timing. The modulation scheme is essentially on-off keying (OOK) — a simple form of AM where the carrier is turned on and off to represent digital data. The experiment shows that with just a wire antenna and an Arduino, one can send intelligible signals up to several meters away, depending on antenna length and environmental factors. long millisAtStart = 0; long millisAtEnd = 0; const long period_broadcast = 8; #define LENGTH_DIT 50 const int length_dit = LENGTH_DIT; const int pause_dit = LENGTH_DIT; const int length_dah = 3 * LENGTH_DIT; const int pause_dah = LENGTH_DIT; const int length_pause = 7 * LENGTH_DIT; void dit(void); void dah(void); void pause(void); void broadcast(int N_cycles); void dontbroadcast(int N_cycles); #define ASM_INC(reg) asm volatile (\"inc %0\" : \"=r\" (reg) : \"0\" (reg)) void setup() { Serial.begin(9600); DDRB = 0xFF; millisAtStart = millis(); dit(); millisAtEnd = millis(); Serial.print(millisAtEnd - millisAtStart); Serial.print(\" \"); Serial.print((length_dit + pause_dit) * period_broadcast * 256 / (millisAtEnd - millisAtStart) / 2); Serial.print(\"kHz \"); Serial.println(); } void loop() { // S dit(); char_pause(); dit(); char_pause(); dit(); char_pause(); // O dah(); char_pause(); dah(); char_pause(); dah(); char_pause(); // S dit(); char_pause(); dit(); char_pause(); dit(); char_pause(); ","date":"2015-01-19","objectID":"/analog-radio/:4:0","tags":["radio","ham","arduino","analog-electronics"],"title":"AM Radio on Arduino UNO","uri":"/analog-radio/"},{"categories":["Research and Education"],"content":"⚗️ Galena Crystal Radios “Powerless, timeless, and analog perfection.” The Galena crystal radio is a passive receiver — it operates entirely without batteries or external power. It relies on the semiconducting properties of Galena (PbS) to detect amplitude-modulated (AM) radio signals. ","date":"2015-01-19","objectID":"/analog-radio/:5:0","tags":["radio","ham","arduino","analog-electronics"],"title":"AM Radio on Arduino UNO","uri":"/analog-radio/"},{"categories":["Research and Education"],"content":"Why Galena Works: Galena acts as a point-contact diode, rectifying the radio signal and allowing the audio component to be extracted. A cat’s whisker (a fine wire) touches the crystal at a sensitive point, forming a crude diode junction. The detected audio is passed to a very high-impedance earphone (usually \u003e10kΩ) to minimize signal loss. ","date":"2015-01-19","objectID":"/analog-radio/:5:1","tags":["radio","ham","arduino","analog-electronics"],"title":"AM Radio on Arduino UNO","uri":"/analog-radio/"},{"categories":["Research and Education"],"content":"Construction Tips: The antenna should be long and elevated for best reception. Coil winding must be tuned to the desired frequency range (typically MW or SW). Tuning capacitors can be improvised or scavenged from vintage electronics. This elegant device demonstrates the essence of radio — a form of communication born of natural materials, signal physics, and nothing more than wire and rock. ","date":"2015-01-19","objectID":"/analog-radio/:5:2","tags":["radio","ham","arduino","analog-electronics"],"title":"AM Radio on Arduino UNO","uri":"/analog-radio/"},{"categories":["Hardware Builds","Research and Education"],"content":"Tube amplifiers clones and builds for guitar and valve related projects","date":"2015-01-19","objectID":"/tube-amps/","tags":["tube-amps","analog-electronics"],"title":"DIY Tube Amps Builds 🎸","uri":"/tube-amps/"},{"categories":["Hardware Builds","Research and Education"],"content":"There are many many ways to build an amplifier, depending on money and time available, choosing the most expensive components, creating (or again, buy) a custom metal chassis (or have a friend that can make many as you want) with the objective to obtain a better build for the same price. Building tube amps is very rewarding, and can keep you busy with its fair amount of metalwork and various power tools, like folding machines, press, lathe, milling machines and uncountable hand tools. Finishing the build with spray paint, adding lettering, logos, design elements one can go on forever. Custom shop! Building Tube Amps Builds builds your knowledge and skills Danger getting an electric shock getting physically hurt the build time can be humongous and inversely proportional to the playing time the build time might keep extending due to improvements and continuous integration there can be failures Main advantages are: Success you will learn how to deal with high voltages you will learn how physical phenomena really works and how all those math formulas you saw at high school become alive you will learn how different materials can be glued and joined you will learn lots of tricks At the end of the day you can proudly showcase your rig and let somebody else play on it, until you clean up your workplace and get some sleep! The greatest thrill is always there when turning the power on switch the very first time for each build. Everytime. MARSHALL-ATTACKS! The following gallery displays some different builds of the Marshall JCM800 Master Volume Lead specifically the 2204 model. Specification 2204 (measured at 1kHz, controls set to maximum, top input channel) low sensitivity input 17 mVrms (-33dBu) high sensitivity input 150 pVrms (-74dBu) 50Wrms output power THD 3% 2x EL34 power tubes class B push-pull configuration EQ Treble 10kHz, EQ Mid 500Hz, EQ Bass 50Hz 4, 8, 16 ohm output impedance (selectable) FENDER Champ-Amp Table-Top This build is my favourite and I plan to spend mo","date":"2015-01-19","objectID":"/tube-amps/:0:0","tags":["tube-amps","analog-electronics"],"title":"DIY Tube Amps Builds 🎸","uri":"/tube-amps/"},{"categories":["Hardware Builds","Research and Education"],"content":"Inspiration The inspiration for this build came from the VOX Night Train series which caught my eye especially for the form-factor and beautiful metallic case with grill. VOX Night Train - NT15H Head Even though VOX used to make the LIL’NIGHT TRAIN version, which has (only) 2W of pure tube tone into 16 ohm speaker impedance, it uses exclusively 12AX7 dual-triodes for pre-amp stages and a 12AU7 at the final stage, so it uses like its bigger brother, a push-pull configuration for the output. VOX LIL'Night Train VOX Front VOX Rear Being particularly fond of the class A configuration of the Fender Champ-Amp, I took its original schematic one step further adding a passive tone-control circuit. ","date":"2015-01-19","objectID":"/tube-amps/:1:0","tags":["tube-amps","analog-electronics"],"title":"DIY Tube Amps Builds 🎸","uri":"/tube-amps/"},{"categories":["Hardware Builds","Research and Education"],"content":"Audio Precision Measurement The DUT has been connected and tested using an APx585 Audio Analyzer. The generator output was feeding the amp input and its 8R output is connected to a pure resistive load of the same impedance which feeds the analyzer balanced input directly. The DUT is powered via an AC generator set to 230VAC. ","date":"2015-01-19","objectID":"/tube-amps/:2:0","tags":["tube-amps","analog-electronics"],"title":"DIY Tube Amps Builds 🎸","uri":"/tube-amps/"},{"categories":["Hardware Builds","Research and Education"],"content":"Frequency Response Gain Frequency Response Gain ","date":"2015-01-19","objectID":"/tube-amps/:2:1","tags":["tube-amps","analog-electronics"],"title":"DIY Tube Amps Builds 🎸","uri":"/tube-amps/"},{"categories":["Hardware Builds","Research and Education"],"content":"Stepped Frequency Sweep Stepped Frequency Sweep RMS Level ","date":"2015-01-19","objectID":"/tube-amps/:2:2","tags":["tube-amps","analog-electronics"],"title":"DIY Tube Amps Builds 🎸","uri":"/tube-amps/"},{"categories":["Hardware Builds","Research and Education"],"content":"Stepped Level Sweep RMS Level Stepped Level Sweep RMS Level THD+N vs. Measured Level Stepped Level Sweep THDn vs. Measured Level ","date":"2015-01-19","objectID":"/tube-amps/:2:3","tags":["tube-amps","analog-electronics"],"title":"DIY Tube Amps Builds 🎸","uri":"/tube-amps/"},{"categories":["Hardware Builds","Research and Education"],"content":"FFT FFT @ 440Hz FFT @ 440Hz FFT @ 1kHz FFT @ 1kHz FFT Noise Floor Fender Champ-Amp 5F1 1957 The Fender Champ was a guitar amplifier made by Fender introduced in 1948 and discontinued in the early 80s. I could put my hands once on an authentic Fender Champ-Amp (just like the one in the gallery below) from the late ’50s and I was immediately fascinated by its simple construction and characteristic sound. Here I collected some information about that original series. Fender Champ-Amp 5F1 original schematic Fender Champ-Amp 5F1 original assembly layout The power stage circuit is single-ended class A originally equipped with a 6V6GT tube. Five watts of output power without any tone-control circuit relegated this amp to be usually used in recording studios. ","date":"2015-01-19","objectID":"/tube-amps/:2:4","tags":["tube-amps","analog-electronics"],"title":"DIY Tube Amps Builds 🎸","uri":"/tube-amps/"},{"categories":["Hardware Builds","Research and Education"],"content":"Input stage There are two input jacks available, for low and high impedance sources. The 1M resistor when using the #1 input provides the grid return path for the input triode. When using the #2 input the 1M is shorted out and the grid return to ground becomes one of the 68K resistors with the other 68K resistor feeding the input in series. The grid is taken off at the mid point of the 2 x 68k resistor stack forming a 2:1 voltage divider causing a -6dB signal level drop. ","date":"2015-01-19","objectID":"/tube-amps/:3:0","tags":["tube-amps","analog-electronics"],"title":"DIY Tube Amps Builds 🎸","uri":"/tube-amps/"},{"categories":["Hardware Builds","Research and Education"],"content":"6V6GTA vs 6V6SJJ The original 6V6 is a tetrode introduced in July 1939, with two grids on top of the anode and cathode, and it is a scaled-down version of the 6L6 power tube introduced in April 1936. It was available in glass (GT) and metallic casing. | Introduction date | 10 July 1939 | | Base | Octal (Int.Octal, IO) K8A, USA 1935 (Codex=Udb) | | Heater (filament) | 6,3V 450mA | | Heater warm-up Time (average) | 11 s | | Heater-Cathode Voltage Peak | ± 200V | | Heater-Cathode Voltage Average | ± 100V | | Direct Interelectrode Capacitances (approx.) | | | Grid No. 1 to Plate | 0.7pF | | Grid No. 1 to Cathode, Heater, Grid No. 2, and Grid No. 3 | 9pF | | Plate to Cathode, Heater, Grid No. 2, and Grid No. 3 | 7.5pF | 6V6 in class A (single-ended) amplifier configuration | MAXIMUM RATINGS | | | Plate Voltage | 350V | | Grid-No.2 (Screen-Grid) Voltage | 315V | | Plate Dissipation | 14W | | Grid-No.2 Input | 2.2W | | TYPICAL OPERATION | | | Plate Voltage | 250V | | Grid-No.2 Voltage | 250V | | Grid-No.1 (Control-Grid) Voltage | -12.5V | | Peak AF Grid-No.1 Voltage | 12.5V | | Zero-Signal Plate Current | 45mA | | Maximum-Signal Plate Current | 47mA | | Zero-Signal Grid-No.2 Current | 7mA | | Plate Resistance (Approx.) | 50KOhm | | Transcoductance | 4100umho | | Load Resistance | 5KOhm | | Total Harmonic Distortion | 8% | | Maximum-Signal Power Output | 4.5W | | CHARACTERISTICS (Triode Connection) | * | | Plate Voltage | 250V | | Grid-No.1 (Control-Grid) Voltage | -12.5V | | Amplification Factor | 9.8 | | Plate Resistance (Approx.) | 1960Ohm | | Transconductance | 5000umho | | Plate Current | 49.5mA | | Grid-No.1 Voltage (Approx.) for plate current of 0.5mA | -36V | Grid No.2 connected to plate. Here are the diagrams from the 6V5S datasheet, that are more of interest unless you have the real vintage ones. 6V6S Curves Equivalents: 6V6GT = 6П6С = VT-107A = CV511 = GT6V6 = 6V6GT/G = 6AY5 = 6V6_DDR ","date":"2015-01-19","objectID":"/tube-amps/:4:0","tags":["tube-amps","analog-electronics"],"title":"DIY Tube Amps Builds 🎸","uri":"/tube-amps/"},{"categories":["Creative Media"],"content":"Proiezione Origami – Book Cover Design This cover design project began as a collaboration with the Italian author Alessandra Arcieri, who penned a cryptic and futuristic tale titled Proiezione Origami, set in a cyberzen world where consciousness, code, and combat blur into a single stream of unfolding events. ","date":"2015-01-15","objectID":"/proiezione-origami-book-cover-design/:0:0","tags":["illustrator","cover-design"],"title":"Proiezione Origami - Book Cover Design","uri":"/proiezione-origami-book-cover-design/"},{"categories":["Creative Media"],"content":"Introduction to the Narrative “Rome, New York, Bombay. What will be the next target?” Set in a fragmented future, the narrative explores transcontinental power plays, high-stakes psycho-games, and mythic figures recast in digital landscapes. The protagonist, known as Agent Alpha, must decode a layered conspiracy crafted by a corporate demiurge. Her mission is embedded within verses from Walt Whitman’s I Sing the Body Electric—a haunting reference and anthem for the electrified self. ","date":"2015-01-15","objectID":"/proiezione-origami-book-cover-design/:1:0","tags":["illustrator","cover-design"],"title":"Proiezione Origami - Book Cover Design","uri":"/proiezione-origami-book-cover-design/"},{"categories":["Creative Media"],"content":"Design Requirements The author had a very clear vision for the cover: Urban skyline as backdrop. Mathematical formulas flowing through the layout. The sentence: “Mata-Hari non è mai esistita – Mata-Hari has never existed” displayed prominently. An emphasis on duality: plus/minus, presence/absence, light/shadow. ","date":"2015-01-15","objectID":"/proiezione-origami-book-cover-design/:2:0","tags":["illustrator","cover-design"],"title":"Proiezione Origami - Book Cover Design","uri":"/proiezione-origami-book-cover-design/"},{"categories":["Creative Media"],"content":"The Visual Concept Initially, the cover started as a static cityscape. But the breakthrough came from sound. Instead of drawing just buildings, I captured a waveform of the spoken phrase “Mata-Hari has never existed,” visualized with emphasis and cadence. That soundwave became the skyline—bridging the analog with the electric. The full wraparound cover. Note the skyline formed by the spoken soundwave. The math formulas were repositioned to climb upward like antennas—extending into the ether from the rear cover only—allowing the front page to stay clean, monolithic, like the mask of a cipher. A sky/lake duality emerges: the soundwave bridges both realms, hinting at reflection, inversion, and recursion—a motif central to the book. ","date":"2015-01-15","objectID":"/proiezione-origami-book-cover-design/:3:0","tags":["illustrator","cover-design"],"title":"Proiezione Origami - Book Cover Design","uri":"/proiezione-origami-book-cover-design/"},{"categories":["Creative Media"],"content":"Cyberpunk Symbolism and Whitman’s Verse The book’s theme draws heavily from I Sing the Body Electric—Whitman’s poetic hymn to embodied existence and spiritual circuitry: “If the body were not the soul, what is the soul?” This verse is repurposed in the book as a hacked manifesto, where the electric body becomes both medium and message. The cover reflects that—especially in the lower mirrored soundwave, a literal and conceptual echo of the upper skyline. The body of the city sings itself—digitally, electrically. ","date":"2015-01-15","objectID":"/proiezione-origami-book-cover-design/:4:0","tags":["illustrator","cover-design"],"title":"Proiezione Origami - Book Cover Design","uri":"/proiezione-origami-book-cover-design/"},{"categories":["Creative Media"],"content":"Origami as Metaphor To tie it to the book’s title, I designed a minimalist origami butterfly—a symbol of fragility, transformation, and encoded design. It flutters on the back cover like a totem of nonlinear logic and recursive storytelling. Close-up: the origami butterfly emblem. Origami, after all, is folded language—a perfect metaphor for a plot that reshapes itself with every layer peeled back. ","date":"2015-01-15","objectID":"/proiezione-origami-book-cover-design/:5:0","tags":["illustrator","cover-design"],"title":"Proiezione Origami - Book Cover Design","uri":"/proiezione-origami-book-cover-design/"},{"categories":["Creative Media"],"content":"My Preface – Cyberpunk in Tone The story interlaces seamlessly between the ever-existing layers of knowledge and notion, human and machine, duality (0, 1), pivoting over the fulcrum of the third state: nil, Z, or the high impedance mode. Just like ideal operational amplifiers, the travelling Agents with infinite input impedance and zero output impedance will induce stray currents in your body electric—across a live circuit board shaped just like a table game. – LC ","date":"2015-01-15","objectID":"/proiezione-origami-book-cover-design/:6:0","tags":["illustrator","cover-design"],"title":"Proiezione Origami - Book Cover Design","uri":"/proiezione-origami-book-cover-design/"},{"categories":["Creative Media"],"content":"Final Notes The final cover was printed in full wraparound format with high gloss lamination. The title sits across two realms—solid and wave, text and voice. Like the book itself, it challenges the reader to listen as much as to look. ","date":"2015-01-15","objectID":"/proiezione-origami-book-cover-design/:7:0","tags":["illustrator","cover-design"],"title":"Proiezione Origami - Book Cover Design","uri":"/proiezione-origami-book-cover-design/"},{"categories":["Creative Media"],"content":"Purchase You can find Proiezione Origami by Alessandra Arcieri at: Proiezione Origami on ibs.it Proiezione Origami on ilmiolibro.it Rome, New York, Bombay. What will be the next target? In a scenario á-la Blade Runner, in a time marked by attacks and dominated by the logics of psycho-empowering games, every experience is transformed into Agone and every gamer in Ludopath. The jingle of the new role-playing game is a song by the TV musical “Fame”, inspired by the verses of Walt Whitman. Among these verses lies the secret of Agent Alpha’s mission. The rebel player, determined to neutralize the mother-company and to discover the identity of the powerful demiurge, will have to deal with a fearsome opponent sent to flush her out, some mercenaries and a series of events created on-spot by the game. Among excellent university campuses, historic cities and metropolis with gray tones, all is played without the exclusion of blows. Alpha has a precious ally, a valid Master and a secret and very powerful energy resource, which she does not yet know. She will first have to sing the electric body. Finalist book at BUK Modena 2017. ","date":"2015-01-15","objectID":"/proiezione-origami-book-cover-design/:8:0","tags":["illustrator","cover-design"],"title":"Proiezione Origami - Book Cover Design","uri":"/proiezione-origami-book-cover-design/"},{"categories":["Software and Code"],"content":"Over the years, I’ve developed and published a number of mobile apps — primarily for Apple iOS, though I’ve also ventured into Android using Java and Kotlin. This post offers a curated list of those projects that I believe are most worth sharing. Some of these apps are open source, and I’ve linked to their public repositories where available — feel free to explore, fork, or contribute. What we now call “apps” began as simple, standalone tools. Here are mine — crafted from scratch, designed with care, and sometimes a bit of eccentric joy. Tip Unless otherwise noted, I was responsible for: UI/UX and graphic design Core development and architecture Music composition or arrangement Promotional video production … and nearly everything else. ","date":"2015-01-12","objectID":"/apps/:0:0","tags":["ios","android","open-source"],"title":"Mobile Apps","uri":"/apps/"},{"categories":["Software and Code"],"content":"ANTOINE: that little Prince 🤴 An experimental text reader app based on The Little Prince by Antoine de Saint-Exupéry. “Antoine” reimagines the reading experience with an interactive, multilingual, and sensor-enhanced storytelling interface. ","date":"2015-01-12","objectID":"/apps/:1:0","tags":["ios","android","open-source"],"title":"Mobile Apps","uri":"/apps/"},{"categories":["Software and Code"],"content":"✨ Features Includes the full text of The Little Prince in four different languages, switchable interactively. Every paragraph is touch-sensitive: tap once to switch translations in a circular sequence, or toggle between a preferred pair of languages. Each language has its own font size and color settings, individually customizable. Embedded illustrations come alive with subtle parallax and gyroscopic motion effects. A hidden side-scrolling arcade mini-game transforms the illustrations into enemies and bonuses — set against dynamic music that evolves with gameplay intensity. Soundtrack and effects are context-sensitive, dynamically responding to in-game events. 🎵 Music composed and performed by Christian Cellini. Used with permission. ","date":"2015-01-12","objectID":"/apps/:1:1","tags":["ios","android","open-source"],"title":"Mobile Apps","uri":"/apps/"},{"categories":["Software and Code"],"content":"CHATEA Messaging App A peer-to-peer messaging app for nearby devices using Bluetooth and Wi-Fi, without the need for internet or external servers. Built primarily for iOS as a lightweight chat utility with rich media features. ","date":"2015-01-12","objectID":"/apps/:2:0","tags":["ios","android","open-source"],"title":"Mobile Apps","uri":"/apps/"},{"categories":["Software and Code"],"content":"✨ Features Real-time text chat with emoji support Photo sharing and previews Hand-drawn sketches using touch gestures Push-to-talk (PTT) voice messaging for walkie-talkie style communication ","date":"2015-01-12","objectID":"/apps/:2:1","tags":["ios","android","open-source"],"title":"Mobile Apps","uri":"/apps/"},{"categories":["Software and Code"],"content":"🔗 iOS Source Code The name Chatea is a blend of “Chat” and “Tea” — with a nod to the Mandarin word “Cha” (茶), meaning tea. The app’s logo also reflects this ideogram. ","date":"2015-01-12","objectID":"/apps/:3:0","tags":["ios","android","open-source"],"title":"Mobile Apps","uri":"/apps/"},{"categories":["Software and Code"],"content":"MYTUNA: Tunings Librarian A highly practical tuning preset organizer for musicians working with stringed instruments. Designed with flexibility and playback features in mind. ","date":"2015-01-12","objectID":"/apps/:4:0","tags":["ios","android","open-source"],"title":"Mobile Apps","uri":"/apps/"},{"categories":["Software and Code"],"content":"✨ Features Save and label custom tunings for any number of strings Generate sine wave tones for each string Play full tuning sets via arpeggiated playback or strumming simulation Export your library to CSV (compatible with Excel and Numbers) Optional pitch detection and reference tone playback Full iCloud Drive support for backup and sharing MYTUNA tunings librarian ","date":"2015-01-12","objectID":"/apps/:4:1","tags":["ios","android","open-source"],"title":"Mobile Apps","uri":"/apps/"},{"categories":["Software and Code"],"content":"🔗 iOS Source Code ","date":"2015-01-12","objectID":"/apps/:5:0","tags":["ios","android","open-source"],"title":"Mobile Apps","uri":"/apps/"},{"categories":["Software and Code"],"content":"PIANOTONER (aka ToneTuna) A precision tone generator built around a fully playable piano interface, covering the standard 88-key range. Ideal for tuning pianos, synths, and analog instruments by ear. ","date":"2015-01-12","objectID":"/apps/:6:0","tags":["ios","android","open-source"],"title":"Mobile Apps","uri":"/apps/"},{"categories":["Software and Code"],"content":"✨ Features Interactive keyboard interface Generates accurate sine wave tones for all 88 keys Adjust the reference pitch of A4 to explore different temperaments Ultra-low-latency output ideal for tuning analog gear ToneTuna: sine wave piano tone generator ","date":"2015-01-12","objectID":"/apps/:6:1","tags":["ios","android","open-source"],"title":"Mobile Apps","uri":"/apps/"},{"categories":["Software and Code"],"content":"🔗 iOS Source Code ","date":"2015-01-12","objectID":"/apps/:7:0","tags":["ios","android","open-source"],"title":"Mobile Apps","uri":"/apps/"},{"categories":["Software and Code"],"content":"🔗 Android Source Code ","date":"2015-01-12","objectID":"/apps/:8:0","tags":["ios","android","open-source"],"title":"Mobile Apps","uri":"/apps/"},{"categories":["Software and Code"],"content":"SHARI: PDF Reader with Web Server A simple but elegant PDF document reader with built-in WebDAV server support — enabling file uploads/downloads without cloud storage. ","date":"2015-01-12","objectID":"/apps/:9:0","tags":["ios","android","open-source"],"title":"Mobile Apps","uri":"/apps/"},{"categories":["Software and Code"],"content":"✨ Features Smooth and responsive PDF viewing experience Built-in WebDAV file server (connect via Wi-Fi browser or Finder) Manage documents directly from your laptop or desktop Perfect for air-gapped devices or local-only workflows ","date":"2015-01-12","objectID":"/apps/:9:1","tags":["ios","android","open-source"],"title":"Mobile Apps","uri":"/apps/"},{"categories":["Software and Code"],"content":"🔗 iOS Source Code ","date":"2015-01-12","objectID":"/apps/:10:0","tags":["ios","android","open-source"],"title":"Mobile Apps","uri":"/apps/"},{"categories":["Software and Code"],"content":"STARTREC: Multicam Timelapse and Sync App A robust, experimental multi-camera app supporting synchronized audio/video/timelapse recording across multiple iOS devices connected via local network. 🚧 This project is currently on hold due to time constraints. ","date":"2015-01-12","objectID":"/apps/:11:0","tags":["ios","android","open-source"],"title":"Mobile Apps","uri":"/apps/"},{"categories":["Software and Code"],"content":"✨ Features Timelapse, photo, audio, and video capture On-device media gallery and GIF generator Advanced timing and synchronization tools for multicam environments Built-in timelapse calculator for real-time planning Customizable manual camera controls with live focus/exposure gestures iCloud Drive support for media storage ","date":"2015-01-12","objectID":"/apps/:11:1","tags":["ios","android","open-source"],"title":"Mobile Apps","uri":"/apps/"},{"categories":["Software and Code"],"content":"🧮 Timelapse Calculator You can either: Enter the interval time, number of takes, and desired FPS, or Input the total shoot duration, interval, FPS, and playback length. The app calculates the required recording time and resulting playback duration. ","date":"2015-01-12","objectID":"/apps/:11:2","tags":["ios","android","open-source"],"title":"Mobile Apps","uri":"/apps/"},{"categories":["Software and Code"],"content":"⏱️ Timed Recordings The app runs two timers during automated sessions: A preroll timer to prep before capture starts An interval timer that manages spacing between takes For each take, the app automatically triggers start and stop based on your mode (photo, video, or audio). ","date":"2015-01-12","objectID":"/apps/:11:3","tags":["ios","android","open-source"],"title":"Mobile Apps","uri":"/apps/"},{"categories":["Software and Code"],"content":"📷 Manual Camera Controls Enable Touchy mode to set focus and exposure dynamically by dragging across the preview area. ","date":"2015-01-12","objectID":"/apps/:11:4","tags":["ios","android","open-source"],"title":"Mobile Apps","uri":"/apps/"},{"categories":["Software and Code"],"content":"🎞️ Videos Promo Video: Touch Live Controls: Live Session Footage: 🎵 Music by Christian Cellini. Used with permission. ","date":"2015-01-12","objectID":"/apps/:11:5","tags":["ios","android","open-source"],"title":"Mobile Apps","uri":"/apps/"},{"categories":["audio","active preamp"],"content":"DI Box A handcrafted direct injection box — a compact, AC-powered audio preamplifier designed for dynamic microphones, capable of cleanly converting mic-level signals to standard line-level output (-10dBV). ","date":"2014-09-20","objectID":"/di-box/:0:0","tags":["Hardware Builds"],"title":"Diretta Iniezione","uri":"/di-box/"},{"categories":["audio","active preamp"],"content":"Features: Class A FET input stage with high linearity and extended bandwidth XLR input with adjustable gain Balanced or unbalanced line-level output Low noise, low distortion performance Wide frequency response ","date":"2014-09-20","objectID":"/di-box/:0:1","tags":["Hardware Builds"],"title":"Diretta Iniezione","uri":"/di-box/"},{"categories":["audio","active preamp"],"content":"🎙️ Motivation \u0026 Design Approach While trying to record audio using a Shure SM58 dynamic microphone directly into a Mac’s line-in jack, I encountered the usual issues: low gain, poor signal-to-noise ratio, and uninspiring tone. So, I decided to build my own solution — a clean, simple preamplifier with tone characteristics I personally enjoy. The input stage is modeled after the classic 12AX7 triode front-end found in vintage Fender amplifiers — but implemented here with a JFET, taking advantage of its tube-like character, low-noise performance, and analog simplicity. No USB or digital interference: the unit is powered by a noiseless internal AC supply, intentionally avoiding computer-induced hum. ","date":"2014-09-20","objectID":"/di-box/:1:0","tags":["Hardware Builds"],"title":"Diretta Iniezione","uri":"/di-box/"},{"categories":["audio","active preamp"],"content":"🔌 Input Stage: FET vs. Triode In terms of behavior, the FET booster circuit is functionally very close to a triode: both operate in Class A, both shape their transconductance via negative feedback, and both offer a pleasing analog response curve. FET booster. To emulate this sound, I based my design loosely on the well-known Fetzer Valve preamp, originally conceived for guitar pedals but easily adapted to microphone-level signals. I tested a few JFETs from my stash — 2SK30 and 2N5457 — and settled on the 2N5457 for its smooth response and availability. The circuit runs at 18V, giving a large headroom and excellent dynamic range. ","date":"2014-09-20","objectID":"/di-box/:2:0","tags":["Hardware Builds"],"title":"Diretta Iniezione","uri":"/di-box/"},{"categories":["audio","active preamp"],"content":"📈 Testing \u0026 Waveform Results Using a -20 dBu sine wave (1 kHz), AC-coupled into the DI box, the output wave looks very stable and distortion-free at full volume. Direct injection of a -20 dBu 1kHz wave, output volume at max. Switching to a live capture using the Shure SM58 in front of the Mac’s internal speaker (playing the same tone), we observe minor distortion — expected, given the poor acoustic source and uncontrolled conditions. Captured via Shure SM58 from Mac speaker output, 1kHz tone. A small DC offset was observed during biasing, later traced to a faulty trimmer in the bias voltage divider. Nonetheless, the resulting voice recordings are crisp, warm, and have an analog texture that I find very pleasant. ","date":"2014-09-20","objectID":"/di-box/:3:0","tags":["Hardware Builds"],"title":"Diretta Iniezione","uri":"/di-box/"},{"categories":["audio","active preamp"],"content":"🎧 Audio Sample Want to hear how it sounds? Here’s a short voice recording using this DI box: 🎙️ Listen on Vimeo ","date":"2014-09-20","objectID":"/di-box/:4:0","tags":["Hardware Builds"],"title":"Diretta Iniezione","uri":"/di-box/"},{"categories":["audio","active preamp"],"content":"🔬 Future Experiment: Cascode Configuration For the next iteration, I’m considering a cascode configuration using dual FETs or FET + BJT to further increase gain and linearity. Considering future development… ","date":"2014-09-20","objectID":"/di-box/:5:0","tags":["Hardware Builds"],"title":"Diretta Iniezione","uri":"/di-box/"},{"categories":["audio","active preamp"],"content":"🛠️ Final Assembly The assembled DI Box. The entire build fits in a compact metal enclosure, with XLR input and standard jack outputs. Simple, effective, analog. If you’re looking for a reliable mic-to-line converter with vintage character — this little Diretta Iniezione box just might do the trick. ","date":"2014-09-20","objectID":"/di-box/:6:0","tags":["Hardware Builds"],"title":"Diretta Iniezione","uri":"/di-box/"},{"categories":["Creative Media"],"content":"Crafting the Leaflet: A Night at Bar dello Sport It all began with a casual evening at Bar dello Sport in Serramonacesca, sipping on the iconic Italian drink—Campari Soda—amid the warm embrace of local hospitality. Conversations drifted freely among friends and locals, and an idea sparked: designing a unique promotional poster for an upcoming jam session night sponsored by Campari. Fueled by inspiration (and a few rounds of drinks), I eagerly offered my skills as a graphic designer to craft the flyer. Returning home late that night, ideas flowed vividly in my mind. The bright red of the Campari bottles reminded me strangely yet irresistibly of a distant memory: the honey pot ants, or Tjala, that I had encountered in central Australia years earlier. Their swollen abdomens, filled with sweet nectar, vividly resembled miniature Campari bottles—a perfect metaphor for the vibrant and sweet atmosphere the event promised. ","date":"2014-07-15","objectID":"/honey-ants-dreaming-jam-session/:1:0","tags":["flyer","illustrator","jam-session"],"title":"Campari Dreaming - Honey Ants Jam Session Night","uri":"/honey-ants-dreaming-jam-session/"},{"categories":["Creative Media"],"content":"Red Centre Dreaming: Aboriginal Inspiration The leaflet’s artistic concept blossomed further from a memorable journey into Australia’s Red Centre. In November 2008, I had the privilege to explore the desert landscape near Alice Springs with René Kulitja—a renowned Yankunytjatjara Anangu artist—and her late husband, Richard. René’s captivating dot-painting art, celebrated internationally, profoundly influenced my own creative sensibilities. Her famed “Yananyi Dreaming” adorns a Qantas Boeing 737, symbolizing her people’s connection to their land and traditions. My flyer integrated these Aboriginal cultural elements with Italian aesthetics. Using Photoshop, I transformed the honey pot ants into striking, vibrant-red visuals, encapsulating both the essence of Campari Soda and the powerful symbolism of Australian Dreaming stories. Campari Soda Ants Jam Session Poster (70x100cm) - (c) 2014 by Luca Cipressi. ","date":"2014-07-15","objectID":"/honey-ants-dreaming-jam-session/:2:0","tags":["flyer","illustrator","jam-session"],"title":"Campari Dreaming - Honey Ants Jam Session Night","uri":"/honey-ants-dreaming-jam-session/"},{"categories":["Creative Media"],"content":"Serramonacesca: Gateway to the Maiella Mountains Serramonacesca, nestled in Abruzzo’s captivating Maiella mountains, provided the perfect backdrop for this unique event. The village itself is steeped in history, tracing its roots back to Lombard settlements. Its charm is enhanced by landmarks such as: Abbey of San Liberatore a Maiella: A stunning example of medieval architecture with intricate Cosmatesque mosaics. Castel Menardo: Historic ruins offering panoramic vistas of the surrounding valleys. Hermitage of Sant’Onofrio: A spiritual refuge carved into the rocky cliffs, preserving centuries of monastic solitude. The Maiella mountains beckon adventurers and nature lovers alike, offering trails of varying difficulty: Sentiero dello Spirito: A spiritual hiking route connecting ancient hermitages. Monte Amaro: The highest peak, offering challenging hikes with unparalleled views. Orfento Valley Loop: A tranquil walk through lush woodlands and alongside serene streams. ","date":"2014-07-15","objectID":"/honey-ants-dreaming-jam-session/:3:0","tags":["flyer","illustrator","jam-session"],"title":"Campari Dreaming - Honey Ants Jam Session Night","uri":"/honey-ants-dreaming-jam-session/"},{"categories":["Creative Media"],"content":"Stay and Explore: Kokopelli Camping For those wishing to extend their visit, the Kokopelli Camping Retreat offers eco-friendly accommodations. From tent pitches to comfortable glamping facilities, it provides an ideal base for exploring the surrounding wilderness. Activities like guided meditations, yoga, and forest bathing enrich visitors’ experiences, enhancing their connection to the tranquil beauty of Abruzzo. ","date":"2014-07-15","objectID":"/honey-ants-dreaming-jam-session/:4:0","tags":["flyer","illustrator","jam-session"],"title":"Campari Dreaming - Honey Ants Jam Session Night","uri":"/honey-ants-dreaming-jam-session/"},{"categories":["Creative Media"],"content":"A Night to Remember Despite a heavy downpour on the event night, the Campari Soda Nights jam session at Bar dello Sport was a vibrant success. Live blues and rock music filled the air, resonating perfectly with the fusion of Aboriginal inspiration and Italian conviviality captured in my leaflet. The journey from conceptualizing the leaflet to seeing it come to life was not just about design; it was a tribute to shared experiences, cultural appreciation, and the unifying power of music and art. ","date":"2014-07-15","objectID":"/honey-ants-dreaming-jam-session/:5:0","tags":["flyer","illustrator","jam-session"],"title":"Campari Dreaming - Honey Ants Jam Session Night","uri":"/honey-ants-dreaming-jam-session/"},{"categories":["Hardware Builds"],"content":"Handcrafted talking alarm clock.","date":"2014-04-07","objectID":"/back-to-the-future-clock-replica/","tags":["esp32","rpi","arduino"],"title":"DeLorean Time Circuits","uri":"/back-to-the-future-clock-replica/"},{"categories":["Hardware Builds"],"content":"This is a semi-serious rendition of the story behind the making of this project — a replica of the Time Circuits from Back to the Future, turned into a talking alarm clock. Aside from actual time travel (which may or may not be possible depending on your time zone, ISP, and your ability to construct a flux capacitor), it works beautifully as a nostalgic gadget, delivering iconic quotes from the film. If my calculations are correct, when this baby hits 88 miles per hour… you’re gonna see some serious shit. — Dr. Emmett Brown1 Time Circuits Alarm Clock Prototype by Luca Cipressi (2014) ","date":"2014-04-07","objectID":"/back-to-the-future-clock-replica/:0:0","tags":["esp32","rpi","arduino"],"title":"DeLorean Time Circuits","uri":"/back-to-the-future-clock-replica/"},{"categories":["Hardware Builds"],"content":"The Instigator Every now and then, a certain eclectic and gifted guitarist crosses my path — a lover of vintage gear, guitars, and cult memorabilia. On one such occasion, he approached from afar, waving cheerfully. As he came closer, I noticed what he held in his hand: Not a beer glass (he doesn’t drink). Not a cigarette (he doesn’t smoke). It was… a tiny DeLorean model. With a grin, he made his pitch: He wanted a talking alarm clock (because he oversleeps). He wanted to travel through time with it (because history could use some edits). He wanted to play with it (because all work and no play… you know the rest). So I said yes. I’d build a working replica of the Time Circuits — minus the plutonium, of course. He promised to bring the flux capacitor. Spoiler: he actually did. ","date":"2014-04-07","objectID":"/back-to-the-future-clock-replica/:1:0","tags":["esp32","rpi","arduino"],"title":"DeLorean Time Circuits","uri":"/back-to-the-future-clock-replica/"},{"categories":["Hardware Builds"],"content":"Feature List (2014 prototype) Three LED display panels matching the film’s color scheme and font Keyboard-based input for time configuration Iconic sound FX from the movie Alarm quotes voiced loudly through a speaker system ","date":"2014-04-07","objectID":"/back-to-the-future-clock-replica/:2:0","tags":["esp32","rpi","arduino"],"title":"DeLorean Time Circuits","uri":"/back-to-the-future-clock-replica/"},{"categories":["Hardware Builds"],"content":"Feature List (2024 prototype) After ten years, a complete rebuild has taken place. The project has been assembled as a bare-metal board, using ESP32 micro-controllers with WiFi support, separate I2S audio DAC and miniSD card reader for the webserver root and the audio files. Updated information will come soon, stay tuned! ","date":"2014-04-07","objectID":"/back-to-the-future-clock-replica/:3:0","tags":["esp32","rpi","arduino"],"title":"DeLorean Time Circuits","uri":"/back-to-the-future-clock-replica/"},{"categories":["Hardware Builds"],"content":"2014 Prototype Design This was a one-off build, a passion project. No mass production, no scaling issues — just pure, joyful making. That ain’t working, that’s the way to do it. The mechanical fabrication was made possible with help from a good friend and his workshop full of vintage metalworking machines. ","date":"2014-04-07","objectID":"/back-to-the-future-clock-replica/:4:0","tags":["esp32","rpi","arduino"],"title":"DeLorean Time Circuits","uri":"/back-to-the-future-clock-replica/"},{"categories":["Hardware Builds"],"content":"Sizing \u0026 Display Selection Sizing was based loosely on screenshots from the film’s DeLorean dashboard. The real prop likely varied across scenes, but the replica needed to look and feel believable. Some nerdy notes: The month indicator in the film is a backlit plastic plate, not fitted with actual 16/14 segment LED display. I needed consistent color availability (red, green, amber), segment types (7 and 16-segment), and character sizing. After long research, I chose Sunbright 0.8-inch LED displays. This made the device chunkier than the film version — but gave it a great stage presence. The brains of the build? A first-generation Raspberry Pi Model A — ideal for MP3 playback, speaker output, and NTP sync. The display assembly schematic (c) 2014 Luca Cipressi. ","date":"2014-04-07","objectID":"/back-to-the-future-clock-replica/:4:1","tags":["esp32","rpi","arduino"],"title":"DeLorean Time Circuits","uri":"/back-to-the-future-clock-replica/"},{"categories":["Hardware Builds"],"content":"The Display Interface Testing the multiplexed display interface (c) 2014 Luca Cipressi. The display uses multiplexing to drive 360 bits via I2C. ","date":"2014-04-07","objectID":"/back-to-the-future-clock-replica/:4:2","tags":["esp32","rpi","arduino"],"title":"DeLorean Time Circuits","uri":"/back-to-the-future-clock-replica/"},{"categories":["Hardware Builds"],"content":"Handcrafted Electronics This prototype was completely hand-soldered — a deliberate choice to avoid lengthy PCB design, fabrication, and routing time. While a custom PCB would offer better repeatability, this approach let me skip double-layer trace headaches and work faster with precise manual soldering. Hand-wired connections to each display board (c) 2014 Luca Cipressi. Using a manual router, I cut display slots in aluminum faceplates… Routing the openings (c) 2014 Luca Cipressi. …then mounted the displays. Driver boards sit underneath — the only PCBs actually designed for this project. Assembling the display panel (c) 2014 Luca Cipressi. And finally — the 7th of April, 2014, permanently frozen in red, green, and yellow light. Time Circuits Alarm Clock (c) 2014 Luca Cipressi. ","date":"2014-04-07","objectID":"/back-to-the-future-clock-replica/:5:0","tags":["esp32","rpi","arduino"],"title":"DeLorean Time Circuits","uri":"/back-to-the-future-clock-replica/"},{"categories":["Hardware Builds"],"content":"BOM (Bill of Materials) Prices reflect the state of the world in 2014, in EUR, sourced in Italy. RIP Raspberry Pi Model A. [Full BOM table preserved — see original post] ","date":"2014-04-07","objectID":"/back-to-the-future-clock-replica/:6:0","tags":["esp32","rpi","arduino"],"title":"DeLorean Time Circuits","uri":"/back-to-the-future-clock-replica/"},{"categories":["Hardware Builds"],"content":"People \u0026 Credits Emiliano Sabatini — the inspired (and inspiring) instigator Luca Cipressi — design, hardware, software, solder fumes Antonio Di Tonto — metal fabrication Special thanks to Guido Cammisano ","date":"2014-04-07","objectID":"/back-to-the-future-clock-replica/:7:0","tags":["esp32","rpi","arduino"],"title":"DeLorean Time Circuits","uri":"/back-to-the-future-clock-replica/"},{"categories":["Hardware Builds"],"content":"🎬 Extras: TV Feature Shortly after finishing the gadget, we were interviewed for Italian national TV (RAI3) as part of a segment called Elogio della Creatività (“In Praise of Creativity”). Here’s a clip from that April 12, 2014 broadcast on TGR Abruzzo: From Back to the Future (1985), directed by Robert Zemeckis. Watch the scene. ↩︎ ","date":"2014-04-07","objectID":"/back-to-the-future-clock-replica/:8:0","tags":["esp32","rpi","arduino"],"title":"DeLorean Time Circuits","uri":"/back-to-the-future-clock-replica/"},{"categories":["Hardware Builds","Research and Education"],"content":"A mighty Theremin build from an open source project powered by an Arduino UNO. Leon Theremin The theremin is an electronic musical instrument controlled without physical contact by the performer. It is named after its inventor, Leon Theremin, who patented the device in 1928. It was the first electric musical instrument ever made. Like all the greatest invention, it was born while proximity sensors research gone wild :) One morning I stumbled across the OpenTheremin project and I ordered immediately one. They design and produce Arduino compatible theremin shields with two oscillators as you can control both tone and volume. I entered the theremin’s world and found it fashinating. And made my first attempt at it: Theremin ","date":"2013-10-13","objectID":"/theremin/:0:0","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Hardware Builds","Research and Education"],"content":"The Sound of Theremin Schonberg described the sound of the theremin as “a cello lost in a dense fog, crying because it does not know how to get home.” The sound of the Theremin is indeed eerie and ethereal. It has been used in movies such as: Miklós Rózsa’s Spellbound and The Lost Weekend Bernard Herrmann’s The Day the Earth Stood Still Justin Hurwitz’s First Man as well as in theme songs for television shows such as the ITV drama Midsomer Murders and the Disney+ series Loki, the latter composed by Natalie Holt. The theremin is also used in concert music (especially avant-garde and 20th- and 21st-century new music) and in popular music genres such as rock. Beach Boys - Good Vibrations The Big Bang Theory - Sheldon Playing the Theremin Theremin - An Electronic Odissey Documentary ","date":"2013-10-13","objectID":"/theremin/:1:0","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Hardware Builds","Research and Education"],"content":"Analog vs Digital The original Theremin was a completely analog apparatus. Being built in the late 1920s, it was very heavy, bulky and used vacuum tubes and very archaic components to generate its two carriers for pitch and volume that were transferred to metal antennas. Probably the latter are the only same component stayed since the original prototypes: the antennas. It generates two carrier frequencies around 300kHz, slightly displaced each other to avoid cross-modulation and interference. By waving the hands in thin air just near the antennas, the oscillator frequencies are being altered, due to capacitive effects of the body. The internal circuitry then, derives a voltage proportional to the distance from each antennas which, in turn, drives a VCO and a VCA. These two acronyms, still existing today in modern synths stand for: Voltage Controlled Oscillator - able to change its generated frequency via a control voltage. Voltage Controlled Amplifier - able to change its gain via a control voltage. This consistent duality permits the executor to change pitch and amplitude indipendently, giving maximum expressiveness to the execution. The timbre, given by the VCO waveform directly by its shape, can be customized. But usually a sine-wave-like has always been used due to its “ethereal” appeal. The most famous I went through this paper from Robert Moog: Build the EM Theremin ","date":"2013-10-13","objectID":"/theremin/:2:0","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Hardware Builds","Research and Education"],"content":"This classic electronic instrument gives good vibrations and excitations. ","date":"2013-10-13","objectID":"/theremin/:3:0","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Hardware Builds","Research and Education"],"content":"By Robert Moog Most electronic musical instruments are sonic chameleons that try to sound like a wide variety of other things. However, there is one electronic instrument that makes no apologies for its single, immediately recognizable sound: the theremin. This monophonic instrument has added its distinctive, melodic character to the scores of many horror and suspense movies and made its pop debut on the Beach Boys’ “Good Vibrations.” It has also appeared on many concert stages, including Carnegie Hall. The theremin was named after its inventor, Russian physicist and musician Leon Theremin, who developed the instrument in the 1920s. Unlike most musical instruments, the theremin is played with absolutely no physical contact. Players wave their hands in the air near two antennas. As one hand gets closer to the straight vertical tube (called the pitch antenna), the pitch rises; as the other hand gets closer to the horizontal tubular loop (called the volume antenna), the volume decreases. Because the theremin’s pitch and volume are intimately tied to the player’s hand motions, the tone has a vibrant, wavering quality, not unlike a human voice or a violin. Among the requests for DIY projects that EM receives, by far the most common is a do-it-yourself theremin. The instrument presented here is an authentic theremin, with antenna response characteristics, pitch range, and tone color that closely emulate Leon Theremin’s original designs. However, it is reasonably easy to build. It uses currently available components and materials that you can buy at your local hardware store or from mail-order electronic-parts distributors. If you know how to read a schematic diagram, solder, and use a voltmeter, and if you’re comfortable with basic home tools, you should be able to build and adjust this theremin. ","date":"2013-10-13","objectID":"/theremin/:3:1","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Hardware Builds","Research and Education"],"content":"OVERVIEW When you bring your hand near a theremin antenna, you are actually forming a variable capacitor: the antenna is one “plate” and your hand is the other. With the high frequencies and very low currents used by the instrument, your hand is effectively grounded by being attached to your body, so the antenna and your hand form a variable capacitor to ground. This variable capacitance is called hand capacitance. You increase the hand capacitance by bringing your hand nearer to the antenna. During normal operation, the hand capacitance is less than one picofarad, which is a very small capacitance indeed! Each antenna forms a resonant circuit with a group of inductors collectively called an antenna coil. In this design, the resonant frequencies are about 260 kHz for the pitch antenna and about 450 kHz for the volume antenna. At or near the resonant frequency, a tiny change in hand capacitance results in a larger change in the impedance of the antenna circuit as a whole. Refer to Figure 1, the functional block diagram Block Diagram and Figure 2, the schematic diagram of the entire circuit: Schematic The variable-pitch oscillator (VPO), fixed-pitch oscillator (FPO), and detector sections form a beat-frequency oscillator. Q1, Q2, and their associated components constitute the VPO, the frequency of which is set slightly higher than the resonant frequency of the pitch-antenna circuit (established by adjusting L5). As a player brings a hand near the pitch antenna, the changing impedance of the pitch antenna circuit lowers the VPO frequency by about 3 kHz. Q3, Q4, and their associated components form the FPO, the frequency of which is set equal to the VPO frequency (by adjusting L6) when the player’s hand is away from the pitch antenna. The difference, or beat, frequency is extracted by the detector and appears as an audio waveform at the junction of R23 and R24. As the player brings a hand near the pitch antenna, the frequency of the audio waveform goes from 0 to about 3","date":"2013-10-13","objectID":"/theremin/:3:2","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Hardware Builds","Research and Education"],"content":"ANTENNAS Making the antennas can be tricky. They should be metallic, rugged, attractively finished, capable of being rigidly mounted, and easy to fabricate by a home hobbyist. I have found that 3/8-inch soft copper tubing of the sort that plumbers use with bathroom sinks works well. You can buy preplated, straight, short pieces at your local builders’ supply or hardware store. You can also purchase a simple tubing bender that will allow you to bend the volume antenna by hand without collapsing the tubing. You’ll also need a tubing cutter or hacksaw to cut the tubing to length. The finished pitch antenna is a straight, vertical tube eighteen inches long and 3/8 inch in diameter, and the finished volume antenna is a horizontal, hairpin loop with a total length of nine inches. The ends of the volume antenna should be separated by 31⁄4 inches, center to center. I suggest you make the antennas longer than necessary and then cut them to length after they’re formed and stiffened (discussed shortly). Start with a straight, 24- or 36-inch length of tubing for each antenna. To form the volume antenna, slip the tubing bender over the tube. Then, starting ,at the midpoint of the tube, bend it into a semicircular curve. Hold the tube in both hands and push into the curve with your thumbs while pulling down with your other fingers. Doublecheck to make sure that the two ends of the volume antenna are parallel and are the correct distance apart. Copper tubing has one drawback: because copper is soft enough to bend by hand, it is easy to put unwanted kinks in the tubing after it has been formed. You can stiffen the antennas by filling them with polyester resin (the liquid plus-hardener type used to repair car bodies) after you’ve formed them. This is not particularly difficult, but the potential for making a mess is significant, so be sure you have plenty of time and you’re at peace with the world. The pitch antenna is straight because this configuration is more sensitive to changin","date":"2013-10-13","objectID":"/theremin/:3:3","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Hardware Builds","Research and Education"],"content":"CABINET The entire cabinet is made of wood. Except for the front panel, large metal cabinet parts should not be used, as they may add unnecessary capacitance to the antennas. My materials of choice are hardwood plywood for the top and solid hardwood for the rest of the cabinet because they are rugged, easy to shape accurately, and can be attractively finished. The enclosure consists of a base and cover (see Fig. 3). The cover should fit snugly over the base. You may fasten the pieces together with any combination of nails, wood screws, and wood glue, depending on how you like to put cabinets together. After the cabinet parts have been assembled, sand them down well and finish them with the wood finish of your choice, except metallic paint. The antenna sockets are regular tube-to-pipe connectors that you can get when you buy the copper tubing for the antennas. The volume-antenna sockets are straight 3/8-inch-tube-to-3/8- inch-male-pipe connectors, whereas the pitch-antenna socket is a right-angle, 3/8-inch-tube-to-3/8-inch-male-pipe elbow. Drill 3/8-inch holes for these fittings; then screw them in by hand. If you can’t screw the 3/8-inch pipe threads into the wood by hand, don’t force it by using a pipe wrench: you may split the wood. Instead, enlarge the hole slightly with a large round file or a 3/8-inch pipe tap. Once you’re sure you can screw in the pipe fittings by hand, unscrew them, put a small amount of epoxy on the threads, and reinsert them by hand. Before the epoxy hardens, verify that the pitch-antenna socket is vertical by inserting the pitch antenna into the socket and adjusting the position of the socket as necessary. Two 4/4-inch X 3/4-inch blocks and one microphone-stand mounting flange are attached to the bottom of the enclosure. This lets you set the finished unit on a microphone stand (preferred) or on a wood (not metal) table when you play it. ","date":"2013-10-13","objectID":"/theremin/:4:0","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Hardware Builds","Research and Education"],"content":"FRONT PANEL The front panel should be made of 1/16-inch sheet aluminum. It should be about nine inches long and should have bends at the top and bottom for mounting and stiffening. You can either cut and bend the panel yourself or have your local sheet-metal shop do it for you. Alternatively, you can buy a blank, single-space (1U) rack panel, which is 13⁄4 inches high by nineteen inches wide, cut it to length with a hacksaw, and attach the panel to the base from the front instead of from the bottom. However, that will leave a 1/4-inch gap between the top of the panel and the enclosure cover. Four rotary potentiometers, one 1/4-inch phone jack, one 1/8-inch mini-jack, and one toggle switch are mounted on the front panel. The two tuning pots should be located in the left part of the panel so your hand is as far from the pitch antenna as possible when You tune the antennas. Use high-quality, full-size rotary pots and large-diameter knobs for PI and P2, P3 and P4 are less critical; these pots can be miniature, and the knobs can be small. I suggest you use an insulated, 1/4-inch jack for J1 to avoid a ground loop between the audio and power grounds. Eight single-conductor wires and one shielded wire connect the front-panel components to the main circuit board, I suggest you use a connector for these wires so Von can unplug the panel if you need to work on the main circuit board. Prototyping boards often have provisions for mounting a DB15 or DB25 connector. ","date":"2013-10-13","objectID":"/theremin/:5:0","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Hardware Builds","Research and Education"],"content":"MAIN CIRCUIT BOARD All circuitry (except the antenna circuits and front-panel components) is mounted on one circuit board (see Fig. 4). A plug-in prototyping board of the sort used to assemble computer I/O circuits provides the space, connection provisions, and solidity you need. Radio Shack’s prototyping board (catalog #276-1598) provides ample space for all the circuitry with extra room to try your own modifications. The theremin’s power is supplied by a ±12 VAC wall wart, which is widely available (see sidebar “Where to Get Parts and Materials”). The AC voltage is converted into DC by two voltage regulators (UT, U2, and associated components). Keep the power-supply circuit components as close together as possible, and keep connections as short as you can. Be really sure that that C20 and C22 are very close to U2. The negative side of C19 and the positive side of C20 should be connected together with a very short lead, and the grounded side of J2 should also be connected to this lead. The voltage regulators are less likely to oscillate if the connections are kept as short as possible. Be sure to separate the VPO from the FPO by a couple of inches. These oscillators are already lightly coupled through C2 and C6, so they tend to synchronize at low beat frequencies (which is desirable). Placing the oscillator circuits close together increases the coupling, which may result in an excessive tendency to synchronize. In addition, place C4, C8, and C13 very close to the oscillator circuits with which they are associated to maximize the decoupling. After the main board is assembled and checked, brush the solder side with a small wire brush and inspect for unwanted solder bridges, wiring mistakes, and weak solder joints. Then set the board in the middle of the cabinet base in preparation for final test and tuning. ","date":"2013-10-13","objectID":"/theremin/:6:0","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Hardware Builds","Research and Education"],"content":"ANTENNACIRCUITBOARDS The inductors and other antenna-circuit components are mounted on two separate, small circuit boards with little or no copper circuit pattern. LI through L4 are mounted on the pitch-antenna circuit board (see Fig. 4). Position the inductors so they are parallel to one another and about one inch apart, center to center. The inductors are not polarized per se, but each terminal is distinct: one emerges from the center of the coil and the other emerges from the outer layer of the coil. Arbitrarily select one terminal as the beginning and the other as the end, and connect the inductors in series so the end of one inductor is connected to the beginning of the next. Position the board on the base next to the pitch antenna. The free end of L4 should be close to the main circuit board, and the free end of Ll should be close to the pitch-antenna socket. Connect a short wire from the free end of LI to the pitch-antenna socket using a heavy soldering iron or by drilling and tapping a hole for a 4-40 thread and then mounting a solder lug. L7 through L10, DI, C12, and R14 are mounted on the volume-antenna circuit board (see Fig. 4). As with the pitch-antenna circuit, position the inductors so they are parallel to one another, about an inch apart, and connected so the windings are end to beginning. Position the board near the volume antenna, and install wires to connect the free end of L10 to the volume-antenna socket. In addition, connect the junction of L7 and C12 to the junction of C14 and C15, and connect the free end of R14 to pin 13 of U3. ","date":"2013-10-13","objectID":"/theremin/:7:0","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Hardware Builds","Research and Education"],"content":"CHECKING IT OUT After you’ve assembled and cleaned the main board, take a deep breath and check all your connections again. Look for shorts, mistakes, missing connec- tions, etc. Then connect the front panel to the main board, plug in the power supply, and turn the power switch on. Use a voltmeter to check the voltages at the inputs and outputs of U1 and U2 (see Fig. 2). Then check the DC voltages at the collectors of Q1 through Q8 (they should all be about +12V); the emitters of Q1 through Q4, Q6, and Q7 (about 0.6V); and the emitters of Q5 and Q8 (about -2.6V). If you don’t observe all these readings, check everything until you find the problem. Next, verify that all three oscillators are working. Read the AC voltages across L5, L6, and L1 I. If you read about 10 VAC, then the corresponding oscillator is producing a waveform. If you don’t read any voltage at all, the oscillator is not working. To check the detector, measure the DC voltage across R24. If it’s -0.5V or so, the detector is working. Temporarily connect a pair of headphones or a small powered speaker across R24. Turn the tuning slugs in L5 and L6 counterclockwise until the tops of the slugs hit the shield cans. Be careful. Do not force the slugs farther than they want to go! Turn L5 exactly two turns clockwise. Then turn L6 clockwise slowly until you hear a high-pitched whistle. Keep turning until the tone is in the mid range (about I kHz). Now, turn P1 in either direction. You should hear the pitch change markedly. If you observe all these things, then the entire beat-frequency oscillator circuit is in good shape. To check the VCA, temporarily connect pin 12 of U3 to ground. (This should turn on the VCA.) Connect your headphones or monitor amp across R34. You should hear a somewhat louder tone. Now, disconnect the temporary ground connection to pin 12 of U3, and connect that pin to -12V. The audio across R34 should disappear. If it does, the VCA is working properly. While pin 12 of U3 is connected to ","date":"2013-10-13","objectID":"/theremin/:8:0","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Hardware Builds","Research and Education"],"content":"TUNING Before tuning, clean off your workbench and move aside any large, conductive objects such as desk lamps and test gear. Leave a clear space of two or three feet around your work area. Place the cabinet base in the middle of the cleared space, put the pitch antenna in place, and connect the pitch-antenna circuit board between the antenna and the main board. On the main board, temporarily connect pin 12 of U3 to ground and connect the instrument’s audio output to headphones or a monitor amplifier. Now follow these steps to adjust L5 and L6: Set PI (the Pitch Tuning control) to its middle position. Grasp and hold the pitch antenna with one hand. With the other hand, adjust L6 until the beat frequency is zero, Then carefully turn L6 counter-clockwise until you hear a pitch of about 3 kHz (3 1⁄2 octaves above middle C). 3. Let go of the pitch antenna. Slowly retract your hand from the vicinity of the antenna. You should hear the pitch go down. If the pitch does not go down to zero when you’ve retracted your hand completely and stepped back, the inductance of L5 is set too high. Advance the slug in L5 clockwise by a small amount, perhaps 1/10 turn or so, and repeat steps 2 and 3. If the pitch goes to zero and then begins to ascend as you retract your hand, the inductance of L5 is set too low. Turn the slug in L5 counterclock-wise by a small amount, and repeat steps 2 and 3. If the pitch jumps abruptly as you retract your hand, the inductance of L5 is set far too low. Turn the slug in L5 counterclockwise approximately a quarter-turn and repeat steps 2 and 3. Eventually, you will converge on the proper settings for L5 and L6. The idea is to find the settings at which the frequency (a) is zero when you’ve stepped away from the theremin, (b) begins to ascend when your body is about two feet from the pitch antenna, and (c) reaches about 3 kHz when your hand touches the pitch antenna. Tap lightly on L5 and L6 as you converge on the proper settings, which will stabilize th","date":"2013-10-13","objectID":"/theremin/:9:0","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Hardware Builds","Research and Education"],"content":"PLAYING THE THEREMIN You are now ready to try your theremin. Place the instrument (with antennas installed) on a microphone stand that is set about 40 inches high. Connect a small monitor amplifier and speaker to J I and the 12 VAC wall-wart power adapter to J2. Turn on SW1 and touch the pitch antenna. Set P2 so the tone is loud when your left hand is well away from the volume antenna and the volume begins to decrease noticeably when your left hand is brought within ten to twelve inches of the volume antenna. Then set PI so the frequency is zero when your right hand is well away from the pitch antenna and the tone becomes apparent when you bring your right hand within 18 to 24 inches of the pitch antenna. Your instrument is now ready to play. As with any expressive musical instrument, playing the theremin takes some practice. You can start by follow-ing these simple exercises: Stand slightly left of the center of the instrument with your right shoulder about 24 inches from the pitch antenna. Relax your wrists. Think of a note and hum it to yourself. Then move your right hand toward the pitch antenna until the theremin pitch coincides with the pitch you’re humming. Now hold the note. This is not as easy as it sounds, but it’s an important technique to learn. At first, you will find it difficult to stand still, but a few hours of practice will work wonders. Hum two different notes, one after the other. Find the first note on the theremin, hold it, and then slowly glide to the second note. Repeat the above exercise, but bring your left hand near the volume antenna while your right hand glides from one note to the next. Move the left hand slowly at first and then more rapidly as you learn to move your left hand independently of your right hand. This exercise teaches you to “feel” where the notes are and to impart expressive dynamics. While playing a note, introduce vibrato by moving your right hand back and forth from your wrist several times a second. Concentrate on ma","date":"2013-10-13","objectID":"/theremin/:10:0","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Hardware Builds","Research and Education"],"content":"Using polinomials (a comment to the above article) Michel Rouzic says: 2014-11-15 at 18:34 I have another solution. You know how you can approximate the cosine/sine using polynomials? And how every time you halve the range your polynomial covers you multiply the precision by 2^(degree of the polynomial + 1)? So you got your x = [0, 2^32-1] input that represents the angle in turns, do the symmetry thing to turn it into a value in the first quadrant, take the top N bits, use them as the index for your array of polynomial coefficients, compute the polynomial by doing (((c2 * xl » fmt) + c1) * xl » fmt) + c0; (for quadratic approximations), change the sign depending on the input quadrant, and there’s your result! If you go with quadratic approximations and 32 segments then you only need a 384 byte pre-computed table (32 segments, 3 coefficients per segment, coefficients are 32 bits) and you get max error of 1/1,450,000 (-123 dB), and on a modern computer it runs in about 15 cycles (I don’t use symmetry so it goes even faster). You can save more memory using a smaller table (at the cost of a max of 8x precision for each 2x decrement) or using higher degree polynomials (at the expense of CPU time). Olli Niemitalo says: 2015-02-20 at 15:30 Michel, I believe your performance figures, they sound very plausible. Here’s more on using polynomials for sin cos generation: http://www.rossbencina.com/code/sinusoids Fun with sinusoids http://www.rossbencina.com/code/sinusoids Introduction I’ve liked sinusoids for a long time. This is a place where I’m going to write about them. This page initially came about while investigating efficient implementations of Ollie Niemitalo’s parabolic sin(x) approximation (see below.) At the moment it’s a bit disorganised, but perhaps you will find something of interest here. Performance Measurement Methodology The perfomance measurements shown below were conducted under strict unscientific conditions with no third-party validation at our secret labs","date":"2013-10-13","objectID":"/theremin/:11:0","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Hardware Builds","Research and Education"],"content":"An Optimized LUT Implementation Oskari Tammelin contributed the following i86 assembley optimised LUT implementation which can be used for synthesizing sine waves, or any other waveform. looppi: mov edi, esi shr edi, (32 - LUT_BITS) mov edx, esi and edx, (1 \u003c\u003c (32 - LUT_BITS)) - 1; mov eax, Lut[edi*8+4] imul edx add esi, ecx add edx, Lut[edi*8] mov edi, esi mov [ebp], edx shr edi, (32 - LUT_BITS) mov edx, esi and edx, (1 \u003c\u003c (32 - LUT_BITS)) - 1; mov eax, Lut[edi*8+4] imul edx add ebp, 8 add edx, Lut[edi*8] add esi, ecx mov [ebp-4], edx cmp ebp, [esp] jnz looppi Oskari provided the following explanation (slightly edited): esi is the phase, ebp the output pointer The LUT should contain one cycle of a sinewave, interleaved with the delta between adjacent points ([x+1] – x[i]) to make linear interpolation easier. The deltas in the table must be scaled by number of samples in the LUT because edx for the imul is taken from the lower part of the phase in order to save one shl. It calculates two samples per iteration and executes in approximately 7.8 cycles / sample. ","date":"2013-10-13","objectID":"/theremin/:12:0","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Hardware Builds","Research and Education"],"content":"An Optimised LUT in C Magnus Jonsson contributed the following code: #define PI 3.1415926535897932384626433832795 #define TABLE_BITS 8 #define TABLE_SIZE (1\u003c\u003cTABLE_BITS) #define TABLE_SIZE2 (2\u003c\u003cTABLE_BITS) float table[TABLE_SIZE+1]; void init_table() { for(int i=0;i\u003cTABLE_SIZE;i++){ double x=(double)i/(TABLE_SIZE-1); double y=PI/2; if(i!=0) y=sin(x*y)/x; table[i]=y*1.0/65536.0/65536.0; } } float zael_sin4(unsigned x) { unsigned a=-((unsigned)x\u003e\u003e31); x+=x; unsigned b=-((unsigned)x\u003e\u003e31); x^=b; float scale=table[x\u003e\u003e31-TABLE_BITS]; x^=a; return (int)x*scale; } ","date":"2013-10-13","objectID":"/theremin/:13:0","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Hardware Builds","Research and Education"],"content":"Piecewise Polynomial Approximation A method of approximating sinusoids using piecewise parabolic approximations of sin(x) here. Olli’s algorithm using C=0.75 provides a continuous first order derivative resulting in harmonics which decay at a rate of -18dB per octave. This is the spectrum of a signal generated using Olli’s approximation with C=0.75. This graph shows the first quadrant of sin(x) and Ollie’s approximation with C=0.75. The upper curve is the approximation the lower curve is sin(x). ","date":"2013-10-13","objectID":"/theremin/:14:0","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Hardware Builds","Research and Education"],"content":"(Almost) Branch-Free Integer Implementation Below is my (almost) branch-free integer implementation based on Ollie’s. It’s worth noting that Ollie’s can produce sin(x)/cos(x) at the same time – I havn’t got around to implementing that yet. For some reason this implementation has a much higher noise floor that the other contributions below, you would probably be better off using one of them. This version takes 37 cycles not including the if( x == 0 ) conditional. /* approximate_cos() by Ross Bencina \u003crossb@audiomulch.com\u003e based on Olli Niemitalo's \u003coniemita@mail.student.oulu.fi\u003e parabolic sin and cos implementation, available here: http://www.dspguru.com/comp.dsp/tricks/alg/sincos.htm this version is a variation on Olli's which uses no branches and hence may be able to run faster on some pipelined architectures. input range: a 32 bit unsigned long, 0 =\u003e 0, 0xFFFFFFFF =\u003e 2 Pi output range: a 32 bit unsigned long -1 =\u003e 0, 1 =\u003e 0xFFFFFFFF this version currently generates the incorrect value for x=0 if you work out how to fix it without slowing the code down please let me know. */ unsigned long approximate_cos( unsigned long x ) { unsigned long i,j,k; if( x == 0 ) return 0xFFFFFFFF; i = x \u003c\u003c 1; // 2f phasor (full unsigned amp) k = ((x + 0xBFFFFFFD) \u0026 0x80000000) \u003e\u003e 30; // 1f square 270 degrees out of phase, 0 to 2 j = i - i * ((i \u0026 0x80000000)\u003e\u003e30); // 2f triangle j = j \u003e\u003e 15; j = (j * j + j) \u003e\u003e 1; // polynomial shaping into |sin| j = j - j * k; // switch phase of second half return j; } ","date":"2013-10-13","objectID":"/theremin/:15:0","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Hardware Builds","Research and Education"],"content":"i86 Assembly Version Ollie contributed this i86 assembler version which executes in 14 cycles. mov EAX, phase //EAX = 32-bit phase add EAX, EAX //Carry = the half bit, EAX = phase within half sbb EBX, EBX //EBX = 0 if left half, -1 if right half sub EAX, 80000000h //Shift phase by a quarter imul EAX //EDX = 0..40000000h sub EBX, 80000000h //EBX = -80000000h if left half, +7fffffffh if right lea EAX, [0c0000000h+EDX] //Add bias to the parabola imul EBX //Change sign if necessary mov result, EDX //Result = sine approximation -20000000h..+1fffffffh And the shortest assembler version so far, 5 instructions: mov EBX, phase //EBX = 32-bit phase lea EAX, [80000000h+EBX*2] //Take phase within half, shift by 1/4 sar EBX, 31 //Get sign imul EAX //EDX = 0..40000000h lea EAX, [80000000h+EDX*2] //Add bias to the parabola xor EAX, EBX //Change sign if necessary mov result, EAX //Result = -80000000h..7fffffffh ","date":"2013-10-13","objectID":"/theremin/:16:0","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Hardware Builds","Research and Education"],"content":"16 bit Branch Free Implementation Lauri Viitanen has provided a C language 16 bit branch free version of Ollie’s algorithm that computes sine and cosine terms simultaneously. Written in C (GPLed), it’s here: fastSinCos16.c /* * fastSinCos16, a fast 16 bit sine and cosine approximator. * Copyright (C) 2011 Lauri Viitanen * * This program is free software: you can redistribute it and/or modify * it under the terms of the GNU General Public License as published by * the Free Software Foundation, either version 3 of the License, or * (at your option) any later version. * * This program is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the * GNU General Public License for more details. * * You should have received a copy of the GNU General Public License * along with this program. If not, see http://www.gnu.org/licenses/ . */ /* Average and maximum relative and absolute deviations of this algorithm from libc's sin() and cos() values: One multiplication, no extra accuracy: fastSinCos16 **************************************** Max rel Avg rel Max abs Avg abs SINE : 1.546518 0.085854 0.056234 0.030120 COSINE: 1.546518 0.085852 0.056173 0.030118 One multiplication with extra accuracy: fastSinCos16 **************************************** Max rel Avg rel Max abs Avg abs SINE : 0.273291 0.085637 0.056112 0.030089 COSINE: 0.273291 0.085635 0.056112 0.030088 Two multiplications, no extra accuracy: fastSinCos16 **************************************** Max rel Avg rel Max abs Avg abs SINE : 1.546518 0.040205 0.023725 0.013693 COSINE: 0.909888 0.040191 0.023664 0.013693 Two multiplications with extra accuracy: fastSinCos16 **************************************** Max rel Avg rel Max abs Avg abs SINE : 0.363371 0.040009 0.023603 0.013693 COSINE: 0.363371 0.040008 0.023603 0.013693 */ #define DOUBLE_ACCURACY #define EXTRA_ACCURACY /* @fn fastSinCos16 * @brief A","date":"2013-10-13","objectID":"/theremin/:17:0","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Hardware Builds","Research and Education"],"content":"Floating-Point Implementation René Ceballos contributed the following pure floating point implementation of Olli’s approximation with C=0.75. This version takes 62 cycles. /* approximate_sin() by René G. Ceballos \u003crene@rgcaudio.com\u003e input range: 0.0 to 2.0 * Pi output range: -1.0 to 1.0 */ float approximate_sin( float angle ) { const float k2_oPi = 2.f / Pi; const float k2Pi = Pi2; const float kPi_2 = Pi / 2; const float kPi = Pi; const float kPi_32 = 3 * Pi / 2; float x,j; if( angle \u003c kPi_2 ){ x = angle * k2_oPi - 0.5f; j = -(x * x) + 0.75f + x; }else if( angle \u003c kPi ){ angle = kPi - angle; x = angle * k2_oPi - 0.5f; j = -(x * x) + 0.75f + x; }else if( angle \u003c kPi_32 ){ angle -= Pi; x = angle * k2_oPi - 0.5f; j = x * x - 0.75f - x; }else{ angle = k2Pi - angle; x = angle * k2_oPi - 0.5f; j = x * x - 0.75f - x; } return j; } ","date":"2013-10-13","objectID":"/theremin/:18:0","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Hardware Builds","Research and Education"],"content":"Another Branch Free Integer Approximation The following four sinusoidal approximation implementations were contributed by Magnus Jonsson. They are based on the same parabolic approximation as Olli’s but were derived independently. The first C version takes 42 cycles. /* approximate_sin() by Magnus Jonsson \u003czeal@snuttis.com\u003e input range: full unsigned 32 bit( 0x00000000 to 0xFFFFFFFF ) output range: full signed 32 bit ( -0x7FFFFFFF to +0x80000000 ) */ int approximate_sin1(unsigned x) { unsigned s=-int(x\u003e\u003e31); x+=x; unsigned t=-int(x\u003e\u003e31); x+=x; x^=t; unsigned h=(x\u003e\u003e17); h++; h*=h; h+=h; x-=h; x^=s; return x; } int approximate_sin2(unsigned x) { unsigned s=-int(x\u003e\u003e31); x+=x; x^=s; //x=0..0xffffffff x\u003e\u003e=16; //x=0..1 x*=0xffff^x; // x=x*(2-x) x+=x; return x^s; } The following C version executres in 32 cycles: int approximate_sin3(unsigned x) { unsigned s=-int(x\u003e\u003e31); x+=x; x=x\u003e\u003e16; x*=x^0xffff; // x=x*(2-x) x+=x; // optional return x^s; } The following i86 assembler version executes in 11 cycles: add eax,eax // eax=phase sbb ebx,ebx mov ecx,eax xor eax,-1 // not eax mul ecx //add edx,edx // optional, use if you want output 32bit instead of 31 bit xor edx,ebx // edx=sin(phase) Note that the assembly versions use the full 32 bits of input phase whereas the C versions only use 16 bits of input phase. ","date":"2013-10-13","objectID":"/theremin/:19:0","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Hardware Builds","Research and Education"],"content":"A 6th Order Piecewise Polynomial Approximation Olli contributed the following 6th order approximation, which he measured as taking 16 clock cycles on Athlon 700MHz. His calculations indicate that the spectrum has a 3rd harmonic at -66db, and that the remaining harmonics are too low to be noticed. lea EAX, [EBX*2+80000000h] //EAX = 1.31 : x = -1..1 sar EAX, 2 //EAX = 3.29 : x = -1..1 imul EAX //EDX = 6.26 : x^2 = 0..1 sar EBX, 31 //EBX = sign lea EAX, [EDX*2-14*8000000h] //EAX = 5.29 : x^2-14 = 0..1 lea ECX, [EDX*8+EDX-24000000h] //ECX = 3.29 : x^2-1 = -1..0 imul EDX //EDX = 11.21 : x^4-14x^2 xor ECX, EBX //ECX = 3.29 : sign*(x^2-1) = -1..1 lea EAX, [EDX*8+EDX+61*1200000h] //EAX = 8.24 : x^4-14x^2+61 imul ECX //EDX = 11.21 : (x^2-1)(x^4-14x^2+61) Spectrum of Olli’s 6th Order Approximation The following version takes 32-bit x and outputs float y. It is the same 6th-order approximation as above. The output range is -61..61, but can be normalized to -1..1 by uncommenting the three marked instructions. Olli measured the routine as taking around 13 clock cycles (without the normalization) on his Athlon. By following the instructions in the comments this float-\u003efloat approximation can be turned into int-\u003efloat. float x; // float input -pi..pi, UNCOMMENT IFF FLOAT INPUT! //int x; // 32-bit int input, UNCOMMENT IFF INT INPUT! float y; // float output const float c = 0.63661977236758134307553505349f; // UNCOMMENT IFF FLOAT INPUT //const float c = 1.0/0x40000000; // UNCOMMENT IFF INT INPUT const float c40 = 40; const float c6 = 6; const float c96 = 96; const float scale = 1.0f/61; fld x // UNCOMMENT IFF FLOAT INPUT //fild x // UNCOMMENT IFF INT INPUT fmul c // +-x fld st(0) // +-x, +-x fabs // x, +-x fld st(0) // x, x, +-x fmul st(0), st(0) // x^2, x, +-x fxch // x, x^2, +-x fsub c6 // x-6, x^2, +-x fmul st(0), st(1) // (x-6)*x^2, x^2, +-x fadd c40 // (x-6)*x^2+40, x^2, +-x fmulp st(1), st(0) // ((x-6)*x^2+40)*x^2, +-x fsub c96 // ((x-6)*x^2+40)*x^2-96, +-x //fxch // *********","date":"2013-10-13","objectID":"/theremin/:20:0","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Hardware Builds","Research and Education"],"content":"Iterative Methods The Don Cross link in the resources section provides a good explanation of iterative techniques. Bram DeJong has suggested that I talk about stability issues, and methods for changing frequency on the fly – I’ll do this later, or someone else is welcome to. ","date":"2013-10-13","objectID":"/theremin/:21:0","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Hardware Builds","Research and Education"],"content":"Recursive FM Patrice Tarrabia suggests the following two methods for generating non-bandlimited waveforms. He notes that the brightness parameter (k) needs to be carefully tuned. Using this technique it should be possible to build an oscillator which can morph between square and saw like waves. y = sin( x + ky ); //saw-like waveform, k controls brightness y = sin( x + k * yy ); // square-like waveform Basile Graf sent in this Even Polynomial Sin Approximation C code with a maximal error of one LSB in 16bit audio. Hello, I found your webpage 'Fun with sinusoīds', particulary the approximation with parabol segments. I made some tests with higer degrees, with terms in x^2, x^4 and x^6, I optain a maximal error smaller than 1.5*10^-5 for an amplitude of 1. This is a maximal error of one LSB in 16bit audio. Adding a term in x^8 would make it exact for 16bit audio with just two multiplications more... Here is my test code in c I used in a Pure Data external. It compute a sine or a cosine with a period of one, between 0 and 1. (Other constants would of course make it possible also for a period of 2*pi ): Regards Basile Graf //CODE: //---------------------------------------------------- #define COEFF0 1 //POSITIVE!! #define COEFF2 19.73640067359408 //NEGATIVE!! #define COEFF4 64.66421708408689 //POSITIVE!! #define COEFF6 78.10890090530666 //NEGATIVE!! float x2_poly_6, x4_poly_6; static __inline t_float sinpoly6(t_float x) { if (x\u003c=0.5) { x-=0.25; x2_poly_6 = x*x; x4_poly_6 = x2_poly_6*x2_poly_6; return COEFF0 - COEFF2*x2_poly_6 + COEFF4*x4_poly_6 - COEFF6*x2_poly_6*x4_poly_6; } else { x-=.75; x2_poly_6 = x*x; x4_poly_6 = x2_poly_6*x2_poly_6; return -COEFF0 + COEFF2*x2_poly_6 - COEFF4*x4_poly_6 + COEFF6*x2_poly_6*x4_poly_6; } } static __inline float cospoly6(float x) { if (x\u003c=0.25) { x2_poly_6 = x*x; x4_poly_6 = x2_poly_6*x2_poly_6; return COEFF0 - COEFF2*x2_poly_6 + COEFF4*x4_poly_6 - COEFF6*x2_poly_6*x4_poly_6; } else if (x\u003e=.75) { x-=1; x2_poly_6 = x*x; x4_poly_6 = x2_pol","date":"2013-10-13","objectID":"/theremin/:22:0","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Hardware Builds","Research and Education"],"content":"Related Resources DSP Trick: Simultaneous Parabolic Approximation of Sin and Cos Sine wave look-up table generation “pdf” ","date":"2013-10-13","objectID":"/theremin/:23:0","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Hardware Builds","Research and Education"],"content":"acknowledgments Thanks to René G. Ceballos from rgcAudio for doing all the hard work with the performance analysis, and making all the images and sounds so far. ","date":"2013-10-13","objectID":"/theremin/:24:0","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Hardware Builds","Research and Education"],"content":"Simple SSE and SSE2 (and now NEON) optimized sin, cos, log and exp source ","date":"2013-10-13","objectID":"/theremin/:25:0","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Hardware Builds","Research and Education"],"content":"The story I have spent quite a while looking for a simple (but fast) SSE version of some basic transcendental functions (sines and exponential). On the mac, you get the vsinf and friends (in the Accelerate framework) which are nice (there is a ppc version and an intel version, Apple rox) but closed-source, and restricted to macos.. Both Intel and AMD have some sort of vector math library with SIMD sines and cosines, but Intel MKL is not free (neither as beer, nor as speech) AMD ACML is free, but no source is available. Morever the vector functions are only available in 64bits OSes ! Would you trust the intel MKL to run at full speed on AMD hardware ? Some time ago, I found out the Intel Approximate Math library. This one is completely free and open-source, and it provides SSE and SSE2 versions of many functions. But it has two drawbacks: It is written as inline assembly, MASM style. The source is very targetted for MSVC/ICC so it is painful to use with gcc As the name implies, it is approximated. And, well, I had no use for a sine which has garbage in the ten last bits. However, it served as a great source of inspiration for the sin_ps, cos_ps, exp_ps and log_ps provided below. I chose to write them in pure SSE1+MMX so that they run on the pentium III of your grand mother, and also on my brave athlon-xp, since thoses beast are not SSE2 aware. Intel AMath showed me that the performance gain for using SSE2 for that purpose was not large enough (10%) to consider providing an SSE2 version (but it can be done very quickly). Update: I finally did that SSE2 version – see below. The functions use only the mm intrinsics , there is no inline assembly in the code. Advantage: easier to debug, works out of the box on 64 bit setups, let the compiler choose what should be stored in a register, and what is stored in memory. Inconvenient: some versions of gcc 3.x are badly broken with certain intrinsic functions ( _mm_movehl_ps , _mm_cmpeq_ps etc). Mingw’s gcc for example – beware t","date":"2013-10-13","objectID":"/theremin/:25:1","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Hardware Builds","Research and Education"],"content":"sse test The test suite #include \u003cstdio.h\u003e #include \u003cxmmintrin.h\u003e /* useful when debuggin.. */ void print4(__m128 v) { float *p = (float*)\u0026v; #ifndef USE_SSE2 _mm_empty(); #endif printf(\"[%13.8g, %13.8g, %13.8g, %13.8g]\", p[0], p[1], p[2], p[3]); } void print2i(__m64 v) { unsigned *p = (unsigned*)\u0026v; printf(\"[%08x %08x]\", p[0], p[1]); } #ifdef USE_SSE2 #include \u003cemmintrin.h\u003e void print4i(__m128i v) { unsigned *p = (unsigned*)\u0026v; printf(\"[%08x %08x %08x %08x]\", p[0], p[1], p[2], p[3]); } #endif #include \"sse_mathfun.h\" #include \u003cmath.h\u003e #include \u003cstdlib.h\u003e #include \u003ctime.h\u003e #include \u003cassert.h\u003e #ifdef HAVE_SYS_TIMES #include \u003csys/times.h\u003e #include \u003cunistd.h\u003e #endif #ifdef HAVE_VECLIB # include \u003cvecLib/vfp.h\u003e #endif #ifdef HAVE_ACML # include \u003cacml_mv_m128.h\u003e #endif typedef ALIGN16_BEG union { float f[4]; int i[4]; v4sf v; } ALIGN16_END V4SF; #define MAX(a,b) (((a)\u003e(b))?(a):(b)) double frand() { return rand()/(double)RAND_MAX; } #if defined(HAVE_SYS_TIMES) inline double uclock_sec(void) { static double ttclk = 0.; if (ttclk == 0.) ttclk = sysconf(_SC_CLK_TCK); struct tms t; return ((double)times(\u0026t)) / ttclk; } # else inline double uclock_sec(void) { return (double)clock()/(double)CLOCKS_PER_SEC; } #endif #ifndef M_PI #define M_PI 3.14159265358979323846 #endif #ifndef M_LN2 #define M_LN2 0.69314718055994530942 #endif int bitdiff(float a, float b) { if (a == b) return 24; else if (a == 0) { int j = -log(fabs(b))/M_LN2; if (j \u003e 24) j = 24; return j; } else return log(fabs(a))/M_LN2 - log(fabs(b-a))/M_LN2; } /* they are defined at the bottom of the file */ float cephes_sinf(float); float cephes_cosf(float); float cephes_logf(float); float cephes_expf(float); int check_sincos_precision(float xmin, float xmax) { unsigned nb_trials = 100000; printf(\"checking sines on [%g*Pi, %g*Pi]\\n\", xmin, xmax); float max_err_sin_ref = 0, max_err_sin_cep = 0, max_err_sin_x = 0; float max_err_cos_ref = 0, max_err_cos_cep = 0, max_err_cos_x = 0; float max_err_sum_sqr_test = 0; float max_err","date":"2013-10-13","objectID":"/theremin/:26:0","tags":["arduino","theremin","analog-electronics"],"title":"Theremin","uri":"/theremin/"},{"categories":["Creative Media"],"content":"This video is the official behind-the-scenes documentary filmed in Los Angeles during the recording sessions of A Vision, an original jazz album by Italian vocalist, educator, and composer Lorena Fontana. I had the opportunity to fully edit and assemble the video, and the result reflects the intimate, professional, and collaborative atmosphere that only top-tier musicians in LA can create. ","date":"2013-09-15","objectID":"/lorena-fontana-a-vision/:0:0","tags":["jazz","video"],"title":"Lorena Fontana - A Vision - Making of","uri":"/lorena-fontana-a-vision/"},{"categories":["Creative Media"],"content":"The Project Recorded at the renowned studio of Dennis Moody, the production captures the magic of live jazz performance while blending modern vocal arrangements with traditional acoustic instrumentation. In summer 2013, I curated the post-production and video editing for the behind-the-scenes footage, offering a window into the real-time interplay of some of LA’s finest jazz artists. ","date":"2013-09-15","objectID":"/lorena-fontana-a-vision/:1:0","tags":["jazz","video"],"title":"Lorena Fontana - A Vision - Making of","uri":"/lorena-fontana-a-vision/"},{"categories":["Creative Media"],"content":"The Musicians Musician Instrument Bio Lorena Fontana Vocals Italian jazz singer, arranger, and vocal coach known for blending jazz improvisation with classical and contemporary forms. She has collaborated with artists across Europe and the US. Ralph S. Humphrey Drums A legendary LA-based session drummer, Ralph played with Frank Zappa, Don Ellis, and dozens of major jazz, rock, and fusion acts. He has also taught at LA Music Academy and Musicians Institute. Mitchel Forman Piano A virtuosic jazz and fusion pianist who worked with John McLaughlin, Wayne Shorter, and his own projects like Metro. Known for his lyrical style and complex harmonic sense. Edwin Livingston Double Bass A first-call bassist in the LA jazz scene, Edwin has performed with the likes of Ellis Marsalis, Natalie Cole, and Justo Almario. He is known for both straight-ahead jazz and contemporary grooves. Michael Rosen Saxophone An American-born saxophonist who spent decades in Italy. A Berklee alum and former faculty member at Conservatorio G. Frescobaldi, he’s played with Kenny Wheeler, Enrico Pieranunzi, and more. ","date":"2013-09-15","objectID":"/lorena-fontana-a-vision/:2:0","tags":["jazz","video"],"title":"Lorena Fontana - A Vision - Making of","uri":"/lorena-fontana-a-vision/"},{"categories":["Creative Media"],"content":"About the Music The album A Vision blends original compositions and arrangements tailored to Lorena’s wide vocal range and expressive power. The recording sessions captured in this video showcase deep musical sensitivity and mutual respect between musicians, highlighting spontaneous creativity and emotional connection through sound. The repertoire includes ballads, jazz standards, and original compositions marked by contemporary harmony and dynamic vocal phrasing. Studio: Recorded in Los Angeles, Dennis Moody Studios Format: High-resolution multitrack live studio sessions Mood: Reflective, refined, and intimate ","date":"2013-09-15","objectID":"/lorena-fontana-a-vision/:3:0","tags":["jazz","video"],"title":"Lorena Fontana - A Vision - Making of","uri":"/lorena-fontana-a-vision/"},{"categories":["Creative Media"],"content":"Behind the Scenes Atmosphere The session was more than a professional job — it was a true artistic exchange. From subtle cues and shared eye contact to improvised ideas unfolding into complete takes, the process documented in this video exemplifies jazz at its finest: a conversation between souls. Lorena Fontana in studio with Ralph Humphrey and Edwin Livingston. ","date":"2013-09-15","objectID":"/lorena-fontana-a-vision/:4:0","tags":["jazz","video"],"title":"Lorena Fontana - A Vision - Making of","uri":"/lorena-fontana-a-vision/"},{"categories":["Creative Media"],"content":"Links Lorena Fontana on Youtube Lorena Fontana on Bandcamp Mitchel Forman Michael Rosen Edwin Livingston ","date":"2013-09-15","objectID":"/lorena-fontana-a-vision/:5:0","tags":["jazz","video"],"title":"Lorena Fontana - A Vision - Making of","uri":"/lorena-fontana-a-vision/"},{"categories":["Music Projects","Creative Media"],"content":"Fire Makers – Metal Empire In 2005, during a gap between travels and projects, I had the chance to collaborate as a guest keyboardist for an independent metal band named Fire Makers. They were in the process of recording their debut album Metal Empire, and I was invited to contribute organ, piano, and synthesizer parts on several tracks. It turned out to be an electrifying and high-adrenaline experience. What struck me most was the stunning voice of their lead vocalist at the time—none other than Eugent Bushpepa, who would later rise to prominence on international stages. ","date":"2007-11-23","objectID":"/firemakers-metal-empire/:0:0","tags":["hammond","cover-design","recordings"],"title":"Fire Makers - Metal Empire","uri":"/firemakers-metal-empire/"},{"categories":["Music Projects","Creative Media"],"content":"🔥 Fire Makers feat. Eugent Bushpepa — Tears of Pain One of the most intense songs from that session is Tears of Pain, a dramatic and melodic track that fuses classic heavy metal riffs with progressive layers and soulful vocals. For this song, I played the Hammond-style organ parts using a Roland VK-8, while the piano and additional synth textures were layered on a GEM S3 workstation. The combination of analog-style tonewheels and digital sample layering gave the track a punchy, symphonic metal atmosphere that still holds up remarkably well. ","date":"2007-11-23","objectID":"/firemakers-metal-empire/:1:0","tags":["hammond","cover-design","recordings"],"title":"Fire Makers - Metal Empire","uri":"/firemakers-metal-empire/"},{"categories":["Music Projects","Creative Media"],"content":"🎧 The Gear Roland VK-8 – Drawbar organ emulator with Leslie simulation GEM S3 – 76-key workstation for piano and synth textures The band disbanded not long after the release, unfortunately. However, the spirit of Fire Makers lives on under a different name: Maiden Division, a tribute act dedicated to covering the music of Iron Maiden with great accuracy and passion. ","date":"2007-11-23","objectID":"/firemakers-metal-empire/:2:0","tags":["hammond","cover-design","recordings"],"title":"Fire Makers - Metal Empire","uri":"/firemakers-metal-empire/"},{"categories":["Music Projects","Creative Media"],"content":"🎸 Original Band Members Vincenzo Armenise — Bass Matteo Corelli — Drums Massimo “Dingo” Candido — Guitars Carlo Cicognani — Guitars Fabio Guarnieri — Vocals It was a joy and privilege to work with these musicians. I’d like to extend my sincere thanks to the whole band, and especially to Max “Dingo” Candido for involving me in such an energetic, albeit brief, collaboration. “Heavy metal may not be my usual terrain, but it was an unforgettable chapter that taught me the value of raw energy and tight musicianship.” Cover Design I devised my version of the CD cover art for Metal Empire. Soon i will publish the graphics. Stay tuned. ","date":"2007-11-23","objectID":"/firemakers-metal-empire/:3:0","tags":["hammond","cover-design","recordings"],"title":"Fire Makers - Metal Empire","uri":"/firemakers-metal-empire/"},{"categories":["Research and Education"],"content":" This article explains the principles behind Leslie-type loudspeakers and goes on to describe the construction of a generously proportioned system intended for use with a home constructed electronic organ. The article could provide the starting point from which individual readers could build up a rotating loudspeaker system to suit their own particular requirements. Rotating System Loudspeakers for Electronic Organs The most obvious and the routine method of radiating sound from an electronic organ is by means of one or more loudspeakers, suitably and conventionally baffled. In a single-unit instrument, the loudspeaker(s) are mounted behind cutouts, usually in the front panel below the keyboard and above the pedal clavier. While compact and convenient, this arrangement usually suffers some limitation in the effectiveness of the baffling which can be provided and the efficiency with which the sound can be propagated. Leslie Speaker A logical “next step” in improving the performance of an electronic organ is to associate with it a generously designed remote loudspeaker system, which can provide good fundamental bass output and which can propagate the sound from a position in the building where it will be heard to advantage, and enrich itself with natural re-verberation. Where the basic organ makes available its different voices from two or more channels, additional remote loudspeakers may be used, with or without supplementary amplifiers, dispersion of sound sources, more akin to what occurs naturally with pipe instrument. Despite such measures, a charge levelled against electronic organs is that, while large amplifiers and elaborate loudspeakers can make them loud, the basic tone structure is too simple and too rigid, particularly where the generator system employs sequence of frequency-locked dividers. “interest” which is present when the sound is being built up from a large number dispersed and independant pipes, which are nominally in tune but not phase locked The","date":"2006-07-02","objectID":"/leslie-speaker/:0:0","tags":["hammond","leslie","analog-electronics"],"title":"The Leslie Speaker","uri":"/leslie-speaker/"},{"categories":["Research and Education"],"content":"Foreword This is a transcription of my Diploma thesis simply titled “Visual Communication” written in June 2000. At the time, visual communication was emerging as a compelling and novel field within computer science. Personal computers were just beginning to gain enough processing power to approach — albeit slowly — the capabilities of the mainframes of the era. Digital signal processing was still out of reach for home computers, but the direction was clear: we were heading into a visual era. A few decades later, the “unthinkable” can now be performed on a standard notebook. As I was preparing for my diploma, I became fascinated by video signals, sampling techniques, and image compression algorithms. I built a video digitizer card using a PIC microcontroller along with discrete ICs to extract composite video timings. The system drove an ADC into a memory buffer and then transferred a single captured frame over a serial port to a PC. Resources were limited: I had only a small stack of printed datasheets and a few old reference books. USENET offered sparse information, and without a reliable Internet connection, I couldn’t access much beyond the slowly fading world of Bulletin Board Systems. Compuserve and AOL were already being replaced by universities and early datacenters modernizing their infrastructure. In the end, the project came together. The prototype was completed and worked as intended. Sadly, no photographs survive — they were taken on film and have since been lost. The hardware itself vanished into the school’s archive, likely discarded or buried in a landfill. Comunicazione Visiva ","date":"2000-06-10","objectID":"/diploma/:0:0","tags":["analog-tv","microchip pic","assembler"],"title":"Visual Communication and Video Acquisition","uri":"/diploma/"},{"categories":["Research and Education"],"content":"Doxography1 Most academic manuals begin by defining their subject, outlining the key areas of interest and scope of the discipline. In this case, however, I’ve chosen a different approach. Rather than starting with a technical definition of visual communication, I prefer to begin by explaining why I felt compelled to explore this topic — turning, first, to philosophy for insight. Philosophy, after all, is the discipline uniquely suited to probing first principles and tracing origins. It offers the tools to examine not only what something is, but why it matters. The human desire to understand — to know, to discover — is, according to both Plato and Aristotle, rooted in wonder: the awe we feel in the face of something unknown or unexpected. Centuries later, Freud echoed this view in his psychoanalysis of childhood, suggesting that this early curiosity matures into an adult’s persistent, unconscious pursuit of meaning — a drive to uncover truth. It is from this foundational impulse to know that the need to communicate arises. And with it, the importance of information — not simply as data, but as something deeply tied to human inquiry, expression, and connection. In an age of conquest like ours, humanity has realized that simply possessing a vast amount of information can grant power. If one can control the dissemination of information—its modes, quantity, and presentation—then it becomes possible to enter people’s homes and manipulate their preferences and choices. The medium that best fulfills these requirements today is Television—more than an appliance, less than Truth. Present in nearly every home and during nearly every moment of individual or family life, television constantly bombards us with images of lifestyles and ideals rarely reflective of daily reality. Instead, it offers pre-packaged myths and ideals designed by others. This power is amplified by the fact that television simultaneously engages two senses—sight and hearing—thus maximizing its capacity to ","date":"2000-06-10","objectID":"/diploma/:1:0","tags":["analog-tv","microchip pic","assembler"],"title":"Visual Communication and Video Acquisition","uri":"/diploma/"},{"categories":["Research and Education"],"content":"History of Television The invention of the vacuum tube by John Fleming in 1904 marked the beginning of a new branch of electrical engineering: electronics. Once the ability to produce, direct, and exploit an electron flow was discovered, countless applications were immediately envisioned. One of the most decisive breakthroughs was the discovery of the photoelectric effect, which made it possible to convert light into electricity. At its core, the principle of television is incredibly simple. While transmitting a complex image through space might seem difficult, sending an electrical signal is quite straightforward. If an image is broken down into a series of small points, and each point is transmitted as an electrical impulse, all that remains is to design a receiver that can reassemble those impulses in the correct order — and the original image will appear. Transforming these points into currents of varying intensity, transmitting them through space, and ensuring that the receiver reorders them in perfect sync with the transmitter: this was the challenge faced by the pioneers of television. In essence, the dream was to capture the human image and send it beyond the boundaries of space — to see moving images, people, and events in real time from miles away. Initially, such aspirations seemed more magical than scientific. Even when the technical conditions began to align, some degree of madness and desperation was still required to embark on such a venture. These were qualities not lacking in a curious Scotsman named John Logie Baird — an inventor and ill-fated entrepreneur who chased after eccentric ideas and engaged in convoluted business ventures before turning, with little visible hope of success, to the challenge of television. After experimenting briefly with the photoelectric effect — he once managed to ring a bell using only sunlight during the early years of World War I — Baird dabbled in various odd endeavors. He created and marketed paper insoles to keep ","date":"2000-06-10","objectID":"/diploma/:2:0","tags":["analog-tv","microchip pic","assembler"],"title":"Visual Communication and Video Acquisition","uri":"/diploma/"},{"categories":["Research and Education"],"content":"Video Digitization Board The project presented alongside this document is a circuit capable of digitizing a video signal coming from a camera, VCR, television, or any other analog composite video source. Once captured, the image can be viewed on the screen of a standard personal computer, taking advantage of all the benefits of digital format: saving frames to disk, reopening them later, sharing them over a network, printing them, and so on. Building this board required a deep study of the structure of the European composite video signal, as well as the development of onboard control software using a PIC microcontroller. The microcontroller was tasked with managing the precise timing logic required for sampling the video signal and serializing the resulting image data. A corresponding software application was also written for the personal computer to handle the serial interface and display the captured frames. The circuit features a PAL composite video input. However, while the signal is digitized at high speed, the inherent slowness of the RS-232 serial interface — chosen for its wide availability — prevents the transfer of full-motion video in real time to the computer’s memory. As a result, the board is suited for video frame capturing applications, such as alarm systems and video surveillance, rather than continuous video streaming. ","date":"2000-06-10","objectID":"/diploma/:3:0","tags":["analog-tv","microchip pic","assembler"],"title":"Visual Communication and Video Acquisition","uri":"/diploma/"},{"categories":["Research and Education"],"content":"Technical Specifications image resolution: 320x300 pixel; color depth: 256 grayscale levels (8 bit) serial interface speed: 38400 bps supported video input signal: composite PAL power supply: 5VDC ","date":"2000-06-10","objectID":"/diploma/:3:1","tags":["analog-tv","microchip pic","assembler"],"title":"Visual Communication and Video Acquisition","uri":"/diploma/"},{"categories":["Research and Education"],"content":"The Composite Video Signal The television images we perceive as complete on the screen are, in reality, constructed from a single moving point. This point starts at the top-left corner of the screen, sweeps rapidly from left to right, and at the end of each line, moves down to begin a new one—second, third, and so on—until reaching the bottom of the screen. The European video standard defines each frame as composed of 625 horizontal lines. If these lines were displayed sequentially, our eyes would perceive the image as flickering. To eliminate this issue, each image is completed using interlaced lines: the first field (or half-frame) consists of all the odd-numbered lines, and the second field includes all the even-numbered lines. When interlaced, they form a complete image. Fig. 1. To avoid flicker, each frame is rendered on the screen in two alternating fields: one composed only of odd lines, the other only of even lines. When interlaced, the eye perceives a full image thanks to the persistence of vision in the retina. Thus, the first field consists of 312.5 odd lines (lines 1, 3, 5, etc.), and the second field consists of 312.5 even lines (2, 4, 6, 8, etc.). Since these fields alternate at a speed faster than the human eye’s response time, we do not perceive the interruptions caused by the switching of line sequences. Each line—whether odd or even—lasts 64 microseconds. It begins with a 5µs negative pulse known as a sync pulse, which marks the start of the line. Following this sync pulse is the color burst, which is present only in color images and omitted for black and white. About 12µs after the sync pulse begins, the actual image signal starts and lasts for 51µs. This portion of the signal is amplitude-modulated: a signal level of 7.5% corresponds to black, 100% corresponds to white, and intermediate levels represent various shades of gray. Fig. 2. Each scanline lasts 64µs: it begins with a 5µs sync pulse, followed by a color burst. After 12µs, the actual imag","date":"2000-06-10","objectID":"/diploma/:4:0","tags":["analog-tv","microchip pic","assembler"],"title":"Visual Communication and Video Acquisition","uri":"/diploma/"},{"categories":["Research and Education"],"content":"Filters The typical use of filters is to select a specific frequency range from a signal applied at the input. A filter is characterized by a few key parameters: first and foremost, its type (detailed below), then its order, cutoff frequency, passband, and finally, the circuit implementation, which can be realized using only passive components—resistors (R), inductors (L), and capacitors (C)—or by adding active elements such as transistors and operational amplifiers. Low-Pass Filter (LPF): Allows frequencies below the cutoff to pass with minimal alteration, while attenuating higher frequencies. High-Pass Filter (HPF): Allows frequencies above the cutoff to pass with minimal alteration, while attenuating lower frequencies. Band-Pass Filter (BPF): Passes only frequencies within a specific range between two cutoff points, attenuating frequencies outside this band. Band-Stop Filter (BSF): Attenuates frequencies within a specific range between two cutoff points, leaving other frequencies mostly unaffected. Fig. 3. Transmission characteristics of the main types of filters. Many areas of electronics—such as hi-fi audio, telephony, and measurement instrumentation—require systems capable of isolating specific spectral components of an input signal according to defined specifications. Passive filters accomplish this task but introduce loading issues for the stages they are connected to. Active filter designs overcome this problem by using operational amplifiers, allowing for transfer functions characterized by complex-conjugate poles without requiring inductors, which tend to deviate more from ideal behavior due to their inherent winding resistance when compared to capacitors. Active filters are widely used in systems operating at frequencies up to a few hundred kilohertz, while passive filters are generally used in networks processing signals at frequencies in the hundreds of megahertz range. These filters can be defined by the transmission specifications illustrated in Figu","date":"2000-06-10","objectID":"/diploma/:5:0","tags":["analog-tv","microchip pic","assembler"],"title":"Visual Communication and Video Acquisition","uri":"/diploma/"},{"categories":["Research and Education"],"content":"General Concepts on Electrical Signals and Their Conversion In electronic systems, information can be represented by various time-evolving signals. These signals may take different forms while carrying the same informational content. Their nature depends on the source, the processing techniques, and the transmission channels involved. Signals are characterized by multiple parameters such as amplitude, frequency, phase, duty cycle, and polarity. As a result, information is analytically described by a function y = f(t), which expresses the relationship between a chosen signal parameter y and time. It is also important to distinguish between analog and digital representations. Within a defined interval of the variable y, an analog signal can ideally assume an infinite number of meaningful values, whereas a digital signal can only assume a finite number. Specifically, both the domain and range are continuous in the former and discrete in the latter. A significant case of digital signal is the binary signal, where only two values—known as logic levels—are meaningful. In digital systems, information is associated with a code composed of two symbols, such as 0 and 1, used to represent a series of numbers according to a given convention. For instance, in natural binary code, 4 bits can generate 16 distinct combinations that may correspond to numbers, letters, or any other notation. The elementary unit of a message is therefore a repetition of symbols called a word. Its length depends on the number of distinct combinations required. The group of symbols forming a word can be presented either simultaneously (parallel form) or sequentially (serial form). To highlight the differences between analog and digital signals, some key points are presented below: Since an analog signal evolves continuously, it can theoretically represent an infinite number of levels. However, noise—always present in electronic systems—makes it impossible to distinguish between values that differ by les","date":"2000-06-10","objectID":"/diploma/:6:0","tags":["analog-tv","microchip pic","assembler"],"title":"Visual Communication and Video Acquisition","uri":"/diploma/"},{"categories":["Research and Education"],"content":"A/D Conversion Processes The previous considerations highlighted that digital information processing offers many advantages, but generally requires both analog-to-digital (A/D) and digital-to-analog (D/A) conversion stages. This document will focus primarily on the A/D conversion, as used in the developed circuit. The D/A conversion is effectively carried out by the computer monitor itself, which transforms the digitized image back into a visible form. Figure 4 shows the architecture of a typical system for processing analog signals digitally; each of the blocks in the diagram performs the functions described below. The sampling circuit generates a sequence of pulses vs(t) with theoretically infinitesimal duration and amplitude equal to that of the input signal vi(t) at the sampling instants. This step marks the transition from a continuous domain to a discrete one. The sample-and-hold circuit outputs a voltage vsh(t) equal to the sampled value and maintains it constant until the next sampling pulse. This block is necessary to present the A/D converter with a stable value during the time required for conversion. If the input signal varies slowly within the sampling interval, the sampling and holding stages can be omitted. The A/D converter encodes the amplitude of vsh(t) into a digital word composed of a predefined number n of bits. The input quantity of this converter exists in a continuous range, meaning it can theoretically assume an infinite number of values. The output information, however, is discrete, represented by a finite set of values. Therefore, the A/D converter performs a quantization process, dividing the input voltage range into l discrete levels. In binary encoding, this corresponds to l = 2^n. The digital system, represented in the block diagram, refers to any kind of digital processing operation—such as computation, storage, or signal transmission/reception. The D/A converter decodes the digital word and produces a quantized output signal vq(t), w","date":"2000-06-10","objectID":"/diploma/:7:0","tags":["analog-tv","microchip pic","assembler"],"title":"Visual Communication and Video Acquisition","uri":"/diploma/"},{"categories":["Research and Education"],"content":"Data Acquisition A common challenge in many industrial settings is the structured collection of information related to a production process. Based on the acquired data, it’s possible to determine the type of intervention needed to guide the process in the desired direction. Control may require manual action by an operator adjusting specific actuators, or it can occur automatically by linking those actuators directly to the data acquisition system. Today, industrial systems are almost entirely managed by electronic machines due to their accuracy, speed, reliability, and low operating costs. Moreover, the current state of programmable logic and personal computers allows for the creation of highly flexible process controllers. In other words, it’s possible to change the production cycle simply by modifying the software program running on the computer. Fig. 5. General diagram of an acquisition chain. Whenever we need to scientifically describe a system, whether in a static state or evolving over time, we must measure the physical quantities that characterize it. This enables the observer to subsequently intervene in the system to alter its behavior. Measurements can be taken using electronic techniques which, compared to other methods, allow for high sensitivity, precision, and response speed. These methods also enable processing, storing, and transmitting the acquired data. Figure 5 illustrates the general configuration of a measurement chain capable of displaying the value of a physical quantity—detected by a remote sensor—on one or more data presentation devices. Each block of the diagram is described below: The sensor, placed at the input of the chain, converts the physical quantity to be measured into a corresponding electrical signal. This signal is typically analog, except in some cases where the sensor itself provides a digital output (e.g., an encoder). The signal from the sensor generally requires initial conditioning by a low-noise linear preamplifier, which ","date":"2000-06-10","objectID":"/diploma/:8:0","tags":["analog-tv","microchip pic","assembler"],"title":"Visual Communication and Video Acquisition","uri":"/diploma/"},{"categories":["Research and Education"],"content":"Data Transmission Modern electronic systems are often designed to interface with other units to enable data acquisition, storage, processing, or display. A digital message can be sent over a transmission line in either a parallel or a serial format. In the parallel format, all n bits of each word are transmitted simultaneously, requiring n wires plus ground. This leads to high transmission medium costs, limiting its use to short-distance connections—like linking a plotter to a personal computer. Moreover, inductive and capacitive coupling between the conductors (often grouped in a single cable) causes crosstalk, especially when multiple bits switch state simultaneously. In the serial format, all n bits are sent sequentially, clocked over time. This requires only one signal wire plus ground, resulting in a significant cost reduction—especially over long distances—and improved system reliability. However, serial transmission requires PISO (Parallel-In Serial-Out) registers at the transmitter and SIPO (Serial-In Parallel-Out) registers at the receiver. That’s because digital processors generally handle data in parallel form over a data bus. The main drawback of serial communication is its slower speed since transmitting a single word requires at least n clock pulses. Nonetheless, the technique is widely used because it fits existing infrastructures, such as telephone lines. In serial format, transmission speed is measured in bits per second (bit/s) or baud (for binary systems), while parallel transmission speed is measured in characters per second (cps). To decode a serial message, synchronization between transmitter and receiver is necessary. Depending on the technique, serial communication is divided into two types: ","date":"2000-06-10","objectID":"/diploma/:9:0","tags":["analog-tv","microchip pic","assembler"],"title":"Visual Communication and Video Acquisition","uri":"/diploma/"},{"categories":["Research and Education"],"content":"Asynchronous Transmission Synchronization is achieved by adding a start bit at the beginning and a stop bit at the end of each word. In idle state, the line is high; the falling edge of the start bit triggers a local clock expected to match the transmitter’s clock frequency. Then, n bits of the word are transmitted, followed by the rising edge of the stop bit and then a return to idle high state—until the next start bit. Clock precision must be sufficient to avoid phase drift beyond the width of a pulse, though this constraint only applies over the duration of a single word. ","date":"2000-06-10","objectID":"/diploma/:9:1","tags":["analog-tv","microchip pic","assembler"],"title":"Visual Communication and Video Acquisition","uri":"/diploma/"},{"categories":["Research and Education"],"content":"Synchronous Transmission Here, digital words are grouped into blocks that include synchronization characters, error-checking words, and length indicators—depending on the protocol. Synchronization is transmitted once per block or kept constant during idle. This reduces transmission time, but demands more precise clock synchronization throughout the block. Alternatively, a separate clock line can be added, but this increases wiring and system cost. Asynchronous transmission, due to its simplicity, is dominant in communication between microprocessors, computers, and peripherals. Synchronous transmission is used where higher speed is necessary. ","date":"2000-06-10","objectID":"/diploma/:9:2","tags":["analog-tv","microchip pic","assembler"],"title":"Visual Communication and Video Acquisition","uri":"/diploma/"},{"categories":["Research and Education"],"content":"Communication Types Serial communication can take place over dedicated lines (for permanent links) or switched lines (for dynamic connections via switching centers). The most common example of a switched line is the telephone channel—widely used due to its affordability and infrastructure. Communication between two units may be: Simplex: unidirectional only, with no interaction (e.g., a radio spy transmitter). Half-Duplex: bidirectional, but not simultaneous. Widely used due to its simplicity, although it causes delays during direction switching. Full-Duplex: simultaneous bidirectional communication. Eliminates delay and is used in telephony and teleprocessing. ","date":"2000-06-10","objectID":"/diploma/:9:3","tags":["analog-tv","microchip pic","assembler"],"title":"Visual Communication and Video Acquisition","uri":"/diploma/"},{"categories":["Research and Education"],"content":"Serial Communication Hardware Most serial communication functions are handled by a single IC chip labeled USRT, UART, or USART, depending on its capabilities. In industrial environments, electromagnetic interference from motors and power switching can corrupt signals. To protect digital communication, systems use HTL logic families with high noise immunity, or differential (balanced) lines. In differential transmission, twisted-pair wires carry equal and opposite signals. Any noise tends to affect both wires similarly, allowing a differential amplifier to filter it out. Line drivers generate this signal via phase inversion, and receivers recover the original binary states while rejecting common-mode noise. For long distances, modulated (bandpass) transmission is preferred over baseband, using modulation methods like ASK, FSK, or PSK. The corresponding hardware is called a modem, performing both modulation and demodulation of digital signals. ","date":"2000-06-10","objectID":"/diploma/:9:4","tags":["analog-tv","microchip pic","assembler"],"title":"Visual Communication and Video Acquisition","uri":"/diploma/"},{"categories":["Research and Education"],"content":"Logic Level Compatibility and Interfaces Communication between two units requires logic level compatibility. This is ensured by interface circuits, which comply with industrial standards governing electrical and mechanical behavior. Using standardized interfaces allows for system expansion or component replacement—like connecting a measurement instrument or a new printer to a PC. Interfaces can be parallel or serial. Among parallel interfaces, IEEE 488 (from Hewlett-Packard) is notable for programmable test equipment, using 8 data and 8 control lines. Before covering serial interfaces, here’s essential terminology: DTE (Data Terminal Equipment): the end-user device (e.g., computer, printer). DCE (Data Communication Equipment): the intermediary (e.g., modem). Fig. 6. Communication between two remote DTEs (A) and two local DTEs (B). Communication usually follows the Shannon model (with bidirectional paths). In some cases—such as direct PC-to-PC connections—two DTEs connect directly. The most important serial interface in recent decades has been RS-232C, approved by the EIA. It supports both synchronous and asynchronous modes, half- and full-duplex. The RS-232C connector has 25 pins (some for data, others for control), though most applications use only a subset. To improve noise immunity, RS-232C logic levels are higher than those of typical logic circuits: Logic Level Voltage Range Description 0 +3V to +25V space undefined -3V to +3V null 1 -3V to -25V mark “Space” and “mark” are legacy telegraph terms. ICs like National’s LM232 handle RS-232C levels (-9V to +9V output) while powered by a single +5V supply. Fig. 7. Shannon model of an information transmission process. For noisy environments, RS-422 (balanced differential) and RS-423 (coaxial) are better suited, offering higher speeds than RS-232C. The oldest still-used serial interface is the current loop, once used for teletypewriters and now for MIDI in digital musical instruments. It transmits asynchronous data at ","date":"2000-06-10","objectID":"/diploma/:9:5","tags":["analog-tv","microchip pic","assembler"],"title":"Visual Communication and Video Acquisition","uri":"/diploma/"},{"categories":["Research and Education"],"content":"Block Diagram The block diagram of this board represents each functional unit of the circuit, showing simplified interconnections between stages. These include: the sync separator, the A/D converter, the microcontroller, the SRAM, the address generator, the clock, and the serial output stage. The first issue to address is determining when the image to be sampled begins and ends. To avoid wasting memory, it’s necessary to exclude the synchronization pulses and the color burst portion from digitization—storing only 320 pixels per line from a single video field, specifically the odd field. To identify each field and therefore the start (the first pixel or line) of each frame, a video sync separator is required. In this design, the LM1881 integrated circuit by National Semiconductor is used. With an external resistor and capacitor to select the video standard, this chip extracts synchronization signals. For locking to the vertical scan frequency of the European PAL standard (Phase Alternating Line), a 470 KΩ resistor and a 100 nF capacitor are sufficient (see RI and Cl). This makes it possible to extract four signals embedded in the video waveform: Composite sync Vertical sync Odd/even field identification Color burst sync A logic network built with appropriate logic gates performs a Boolean operation on the LM1881’s outputs, generating a high pulse only when valid image data (excluding sync and burst) is present. This pulse is fed to the microcontroller to manage the sampling. The second issue is managing the SRAM. It must: Accept incoming bytes from the A/D converter during frame capture (with Write Enable active), and Later be read by the microcontroller (with Write Enable deactivated) to transfer the stored image to the PC. Fig. 8. LM1881 sync separator pinout and timing signals extracted from the video waveform. These two operations must occur at different speeds: Write speed: synchronized with the sampling clock, at 6 million samples per second Read speed: synchro","date":"2000-06-10","objectID":"/diploma/:10:0","tags":["analog-tv","microchip pic","assembler"],"title":"Visual Communication and Video Acquisition","uri":"/diploma/"},{"categories":["Research and Education"],"content":"Firmware Fig. 9. Flowchart of the PIC microcontroller firmware. The program that runs on the PIC microcontroller handles: Waiting for the start and end of the frame using the TimIn pin Controlling the Reset line of the address generator Managing the Clock Line Select Managing the Read Clock line Managing the serial data output line The program begins by preparing the board for image sampling, initially activating only the reset line of the address generator (i.e., the counter). This holds the memory address at zero, preventing advancement through memory locations. As soon as the odd field of the frame starts—detected by a falling edge on the odd/even line—the controller releases the counter’s reset, allowing the address to advance. At that moment, memory begins storing each pixel at 6 MHz, writing every point of the image into sequential memory locations. The microcontroller then waits for the end of the field, which is detected as a rising edge on the odd/even line, signifying the start of the even field. This marks the end of digitization. At that point, it: Stops sampling by toggling the signal that controls the clock switch Resets the address counter From this point, the firmware proceeds to: Read each byte from PORTB Send it serially via the UART routine Increment the memory address by one location through a clock pulse sent to the counter (via the clock switch, which now routes the microcontroller’s clock signal to the counter) By repeating this cycle for every stored pixel, the companion PC software receives and reconstructs the entire image for display on the screen. LIST P=16C84 INCLUDE \"p16c84.inc\" RA0 EQU 0 ; serial out Timln EQU 1 ; timing input CKSel EQU 2 ; clock line out CKOut EQU 3 ; clock out CntRset EQU 4 ; counter reset ; serial tx routine declarations N_BIT EQU 8 BAUD EQU 9600 FCLOCK EQU 4E6 N_DELAY EQU (FCLOCK - 64 * BAUD) / (12 * BAUD) BUFFER EQU 0x2D TIMER EQU 0x2E COUNT EQU 0x2F C0 EQU OxOC C1 EQU OxOD C2 EQU OxOE org 0x00 clrf PORTA ; init p","date":"2000-06-10","objectID":"/diploma/:11:0","tags":["analog-tv","microchip pic","assembler"],"title":"Visual Communication and Video Acquisition","uri":"/diploma/"},{"categories":["Research and Education"],"content":"Serial Transfer Routine The serial transfer routine must execute with very precise timing to avoid framing errors during reception on the computer side. Specifically, this routine performs exactly 26 clock cycles per transmitted bit, regardless of whether the bit is a start, stop, or data bit. This timing yields a data rate of 9600 bps using a 1 MHz clock, and up to 38400 bps with a 4 MHz clock, assuming an instruction execution time of 1 µs. The second program is responsible for receiving bytes from the serial port and storing them into a preallocated memory structure referenced by a pointer. During the download phase, it displays the received frame by simply creating rows of 320 pixels, where each pixel corresponds to a grayscale tone derived from the value of the received byte. This method maintains a solid correspondence between the sampled brightness of each point and its representation on the computer screen, except for pure black, due to the original grayscale scale starting from a near-black value (7.5%). However, for the intended applications, this does not pose a calibration problem. Each point is visualized using the RGB color model, allowing full use of the host computer’s video card color palette, unconstrained by the limitations of standard color sets. The software uses the following structure to store each grayscale value as RGB: type RGBColor = record red: Integer; { red component } green: Integer; { green component } blue: Integer; { blue component } end; This structure, borrowed from the MacOS™ operating system, allows access to 48-bit color palettes (including support for alpha-video). However, to standardize the program and avoid using indexed CLUTs (Color Look-Up Tables) limited to 256 colors—which would restrict the number of usable grayscale values (not colors)—the structure was simplified by using only the eight most significant bits of the Integer data type. By assigning the same value (i.e., the one received from the hardware board) to each","date":"2000-06-10","objectID":"/diploma/:11:1","tags":["analog-tv","microchip pic","assembler"],"title":"Visual Communication and Video Acquisition","uri":"/diploma/"},{"categories":["Research and Education"],"content":"Multimedia Compression Algorithms Capturing an image in digital form can consume a significant amount of memory. For this reason, compression techniques were developed to reduce image size and save space. Smaller image files are advantageous not only for storage but also for transmitting data over networks like the Internet. Compressing a full-color 2 MB image down to 100 KB, for example, drastically reduces both disk space usage and transmission time. Numerous image compression standards have emerged over the years, with the most prominent being JPEG (pronounced “jay-peg”). JPEG stands for Joint Photographic Experts Group, the name of the original committee that created the standard. JPEG compression can easily achieve a 20:1 compression ratio, though decoding and displaying the image takes more time — a clear example of the trade-off between speed and space. While the term lossy compression might seem alarming, it’s important to understand that no digital image format can perfectly retain all the visual information perceived by the human eye. The main downside of lossy compression is that repeated cycles of compressing and decompressing will degrade image quality incrementally — an issue for some use cases, but negligible for many others. Ideally, one would like to decompress a JPEG image, modify it (e.g., crop it), and recompress it without any additional quality loss. Unfortunately, this is not generally possible: recompressing an altered JPEG image typically results in further degradation. Therefore, it’s best to minimize the number of JPEG compression stages between the original and final image. However, a few specialized operations can be performed on a JPEG file without generational loss. These include 90-degree rotations and flips, but only under certain constraints related to the file format and image dimensions. ","date":"2000-06-10","objectID":"/diploma/:12:0","tags":["analog-tv","microchip pic","assembler"],"title":"Visual Communication and Video Acquisition","uri":"/diploma/"},{"categories":["Research and Education"],"content":"About the JPEG Algorithm JPEG is optimized for compressing either full-color or grayscale images of natural, real-world scenes. It performs well with photographs but poorly with line drawings, charts, or computer-generated graphics. As a lossy algorithm, JPEG does not preserve the exact original image. Instead, it leverages characteristics of human vision — particularly that slight variations in color are less perceptible than variations in brightness. This makes it ideal for images viewed by humans, though it may introduce subtle inaccuracies that could affect machine-based image analysis. A useful feature of JPEG is that its compression level is adjustable. This gives the user the flexibility to balance file size and image quality. You can create extremely compact files if you tolerate lower quality, or preserve high fidelity at the cost of a larger file. JPEG images are usually stored in a format called JFIF (JPEG File Interchange Format), which comes in two versions: Baseline JPEG: Encodes the image in a single, top-to-bottom scan. Progressive JPEG: Encodes the image in a series of scans, gradually increasing quality. The progressive format is especially beneficial for web use. While downloading, a baseline JPEG will show only the top portion of the image until the rest arrives, leaving the bottom blank. In contrast, a progressive JPEG displays the entire image immediately at low resolution and enhances it as more data is received — offering a preview that helps users decide whether to continue downloading. JPEG is designed solely for still images, but its principles extend to motion video compression. Formats like Motion JPEG or MPEG apply similar techniques to sequences of frames. MPEG, for instance, compresses not only individual frames but also the changes between them, a process that is computationally intensive and complicates frame-by-frame editing. With suitable adaptations, the MPEG standard has also been applied to audio, resulting in MPEG Layer 3 — mo","date":"2000-06-10","objectID":"/diploma/:12:1","tags":["analog-tv","microchip pic","assembler"],"title":"Visual Communication and Video Acquisition","uri":"/diploma/"},{"categories":["Research and Education"],"content":"Legal Aspects of JPEG Compression The JPEG specification supports two different backend encoding methods: Huffman coding and arithmetic coding. While both yield the same image quality, arithmetic coding typically compresses data more efficiently — reducing file size by 5–10% compared to Huffman coding. However, JPEG’s implementation of arithmetic coding is covered by patents held by IBM, AT\u0026T, and Mitsubishi. This means that using it legally requires obtaining licenses from those companies. Although scientific research may qualify for exemption under “experimental use,” any personal or commercial application would constitute patent infringement. For this reason, it’s strongly recommended to avoid arithmetic coding in JPEG files. The modest reduction in file size is not worth the potential legal complications. In particular, arithmetic coding should never be used for images intended for exchange over the Internet. Doxography is a term used especially for the works of classical historians, describing the points of view of past philosophers and scientists. Being this relation in conjunction with an multidisciplinar thesis, this arcaic term has been used as introduction for those old-scholars and old-teachers who were looking at such modern and untouched before topic with much suspect and refrain. ↩︎ ","date":"2000-06-10","objectID":"/diploma/:12:2","tags":["analog-tv","microchip pic","assembler"],"title":"Visual Communication and Video Acquisition","uri":"/diploma/"},{"categories":["Hardware Builds"],"content":"A relic project from my high-school days.","date":"1996-01-19","objectID":"/speedometer/","tags":["measurements"],"title":"Digital Tacho for a Scooter","uri":"/speedometer/"},{"categories":["Hardware Builds"],"content":"A relic project from late ’90s Info This project dates back to my high-school days and albeit it should still be working, the original display board is missing. An effort to restore it to working conditions might be made in the future. ","date":"1996-01-19","objectID":"/speedometer/:0:0","tags":["measurements"],"title":"Digital Tacho for a Scooter","uri":"/speedometer/"},{"categories":["Hardware Builds"],"content":"The Scooter “Car’s got a lot of pickup.” As every teenager could enjoy riding a 50 cubic centimeters (1.7 cubic feet) scooter, I was no exception back in the schooldays. Like others, mine too was almost completely modified and not officially road-worthy anymore. This is a photograph of the scooter I used to have, onto which this digital tacho was mounted. It’s got a cop motor, a 440 cubic inch plant, it’s got cop tires, cop suspensions, cop shocks. It’s a model made before catalytic converters so it’ll run good on regular gas. What do you say, is it the new Bluesmobile or what? The original tachometer: the digital tacho was installed replacing the analog one. Unfortunately back in the 90s I did not care to take a photo of it with a film camera. Other than having a bigger motor (70cc), a more performant exhaust, air filter, modified continuous variator, modified clutch, sporting crankshaft, 17cm carburettor but it had a home-made digital speedometer. Main Board the main board and a mock-up for the displays. The actual display board I mounted on the scooter has been lost since years. The display board in this picture is a mock-up of what it was originally made and installed inside the scooter’s cockpit instead of the original one. The original idea had to have the gas-gauge, trip and total mileage indication, direction and high-beams indicators included. the main board was hand soldered (I was a teenager at the time) and had to recur to scraped wires to make all the connections. Not to mention that the soldering iron tip was quite big and not thermo-regulated. In fact it was a soldering iron directly connected to 230VAC and had to manually unplug it to avoid overheating. ","date":"1996-01-19","objectID":"/speedometer/:1:0","tags":["measurements"],"title":"Digital Tacho for a Scooter","uri":"/speedometer/"},{"categories":["Hardware Builds"],"content":"Schematic (main board) the original schematic as I was sketching it during school days This is the last of the original papers I used to bring to school and spend the morning hours filling my notebooks with concepts, sketches and notes of this project. As you can see there are still some over there. ","date":"1996-01-19","objectID":"/speedometer/:2:0","tags":["measurements"],"title":"Digital Tacho for a Scooter","uri":"/speedometer/"},{"categories":["Hardware Builds"],"content":"Calculations The working theory was based on the fact that I decided to get the rotational impulses from the front disc-brake. It had six holes in a row: Calculating the speed, knowing the wheel circumference, could have been done by floating point arithmetic by a decent PIC or ATMEL uC, instead I opted for a simpler shortcut as I had plenty of old EPROM memories at disposal, I found out how I could implement a pair of them to get the calculations done. Done yes, as the results were pre-calculated and stored for the different speed detected by the counter. The six pulses coming from the disc-brake, would have been counted by a CD4040 within a 1 second enable-window controlled by a NE555 monostable. This would have resulted in a 12bit address to fetch the data at that memory locations of two 2764 EPROMS, one for the tenths and one for the units, of the pre-calculated speed. The data present inside the memories was already 7-segment encoded, and ready to be fed though a current buffer to the actual seven-segment displays. Reaching more than 100 km/h was not really possible, but the scooter, with all the modifications and with the right rear-wind down a slope could actually get past that velocity. Using the MSB from each memory location I could use them signals to drive the segments “b, c” on the hundreds digit figure thus saving a lot of components. The solder side of the main board, was a painstakingly task to accomplish, with a brutal soldering iron (surely not a Weller with a fine-tip) looking much more that of an idraulic. I only had spare wires and not consistent in their gauges. Parts list (Main Board) Part Number Description NE555 monostable configuration 1 second pulse 74HC14 inverter CD4040 12-bit binary counter 74LS273 3-state buffer for memory addressing M2764A 64kbit EPROM (2x) 74LS244 3-state buffer for display segment driver ","date":"1996-01-19","objectID":"/speedometer/:3:0","tags":["measurements"],"title":"Digital Tacho for a Scooter","uri":"/speedometer/"}]